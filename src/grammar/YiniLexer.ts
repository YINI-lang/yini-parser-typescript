// Generated from specs/v1.0.0-beta.6x/YiniLexer.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class YiniLexer extends Lexer {
	public static readonly DISABLE_LINE = 1;
	public static readonly SECTION_HEAD = 2;
	public static readonly TERMINAL_TOKEN = 3;
	public static readonly SS = 4;
	public static readonly EUR = 5;
	public static readonly CARET = 6;
	public static readonly TILDE = 7;
	public static readonly GT = 8;
	public static readonly EQ = 9;
	public static readonly HASH = 10;
	public static readonly COMMA = 11;
	public static readonly COLON = 12;
	public static readonly OB = 13;
	public static readonly CB = 14;
	public static readonly OC = 15;
	public static readonly CC = 16;
	public static readonly PLUS = 17;
	public static readonly DOLLAR = 18;
	public static readonly PC = 19;
	public static readonly AT = 20;
	public static readonly SEMICOLON = 21;
	public static readonly BOOLEAN_FALSE = 22;
	public static readonly BOOLEAN_TRUE = 23;
	public static readonly NULL = 24;
	public static readonly EMPTY_OBJECT = 25;
	public static readonly EMPTY_LIST = 26;
	public static readonly SHEBANG = 27;
	public static readonly KEY = 28;
	public static readonly IDENT = 29;
	public static readonly IDENT_BACKTICKED = 30;
	public static readonly NUMBER = 31;
	public static readonly STRING = 32;
	public static readonly TRIPLE_QUOTED_STRING = 33;
	public static readonly SINGLE_OR_DOUBLE = 34;
	public static readonly R_AND_C_STRING = 35;
	public static readonly HYPER_STRING = 36;
	public static readonly ESC_SEQ = 37;
	public static readonly ESC_SEQ_BASE = 38;
	public static readonly NL = 39;
	public static readonly SINGLE_NL = 40;
	public static readonly WS = 41;
	public static readonly BLOCK_COMMENT = 42;
	public static readonly COMMENT = 43;
	public static readonly LINE_COMMENT = 44;
	public static readonly INLINE_COMMENT = 45;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            "'\\u00A7'", 
                                                            "'\\u20AC'", 
                                                            "'^'", "'~'", 
                                                            "'>'", "'='", 
                                                            "'#'", "','", 
                                                            "':'", "'['", 
                                                            "']'", "'{'", 
                                                            "'}'", "'+'", 
                                                            "'$'", "'%'", 
                                                            "'@'", "';'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "DISABLE_LINE", 
                                                             "SECTION_HEAD", 
                                                             "TERMINAL_TOKEN", 
                                                             "SS", "EUR", 
                                                             "CARET", "TILDE", 
                                                             "GT", "EQ", 
                                                             "HASH", "COMMA", 
                                                             "COLON", "OB", 
                                                             "CB", "OC", 
                                                             "CC", "PLUS", 
                                                             "DOLLAR", "PC", 
                                                             "AT", "SEMICOLON", 
                                                             "BOOLEAN_FALSE", 
                                                             "BOOLEAN_TRUE", 
                                                             "NULL", "EMPTY_OBJECT", 
                                                             "EMPTY_LIST", 
                                                             "SHEBANG", 
                                                             "KEY", "IDENT", 
                                                             "IDENT_BACKTICKED", 
                                                             "NUMBER", "STRING", 
                                                             "TRIPLE_QUOTED_STRING", 
                                                             "SINGLE_OR_DOUBLE", 
                                                             "R_AND_C_STRING", 
                                                             "HYPER_STRING", 
                                                             "ESC_SEQ", 
                                                             "ESC_SEQ_BASE", 
                                                             "NL", "SINGLE_NL", 
                                                             "WS", "BLOCK_COMMENT", 
                                                             "COMMENT", 
                                                             "LINE_COMMENT", 
                                                             "INLINE_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"DISABLE_LINE", "EBD", "SECTION_HEAD", "SECTION_MARKER", "SECTION_MARKER_BASIC_REPEAT", 
		"SECTION_MARKER_SHORTHAND", "TERMINAL_TOKEN", "SS", "EUR", "CARET", "TILDE", 
		"GT", "EQ", "HASH", "COMMA", "COLON", "OB", "CB", "OC", "CC", "PLUS", 
		"DOLLAR", "PC", "AT", "SEMICOLON", "BOOLEAN_FALSE", "BOOLEAN_TRUE", "NULL", 
		"EMPTY_OBJECT", "EMPTY_LIST", "SHEBANG", "KEY", "IDENT", "IDENT_BACKTICKED", 
		"NUMBER", "STRING", "TRIPLE_QUOTED_STRING", "SINGLE_OR_DOUBLE", "R_AND_C_STRING", 
		"HYPER_STRING", "ESC_SEQ", "ESC_SEQ_BASE", "UNICODE16", "UNICODE32", "INTEGER", 
		"DECIMAL_INTEGER", "BIN_INTEGER", "OCT_INTEGER", "DUO_INTEGER", "HEX_INTEGER", 
		"DIGIT", "BIN_DIGIT", "OCT_DIGIT", "DUO_DIGIT", "HEX_DIGIT", "FRACTION", 
		"EXPONENT", "SIGN", "NL", "SINGLE_NL", "WS", "BLOCK_COMMENT", "COMMENT", 
		"LINE_COMMENT", "INLINE_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, YiniLexer._ATN, YiniLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "YiniLexer.g4"; }

	public get literalNames(): (string | null)[] { return YiniLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return YiniLexer.symbolicNames; }
	public get ruleNames(): string[] { return YiniLexer.ruleNames; }

	public get serializedATN(): number[] { return YiniLexer._serializedATN; }

	public get channelNames(): string[] { return YiniLexer.channelNames; }

	public get modeNames(): string[] { return YiniLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,45,619,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,1,0,1,0,1,0,1,0,5,0,136,
	8,0,10,0,12,0,139,9,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,5,2,148,8,2,10,2,12,2,
	151,9,2,1,2,1,2,5,2,155,8,2,10,2,12,2,158,9,2,1,2,5,2,161,8,2,10,2,12,2,
	164,9,2,1,2,1,2,4,2,168,8,2,11,2,12,2,169,1,3,1,3,3,3,174,8,3,1,4,4,4,177,
	8,4,11,4,12,4,178,1,4,4,4,182,8,4,11,4,12,4,183,1,4,4,4,187,8,4,11,4,12,
	4,188,1,4,4,4,192,8,4,11,4,12,4,193,3,4,196,8,4,1,5,1,5,1,5,1,5,3,5,202,
	8,5,1,5,1,5,5,5,206,8,5,10,5,12,5,209,9,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,
	8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,
	15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,
	1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,
	25,262,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,273,8,26,
	1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,
	30,5,30,290,8,30,10,30,12,30,293,9,30,1,30,1,30,1,31,1,31,1,32,1,32,5,32,
	301,8,32,10,32,12,32,304,9,32,1,32,3,32,307,8,32,1,33,1,33,5,33,311,8,33,
	10,33,12,33,314,9,33,1,33,1,33,1,34,1,34,1,34,3,34,321,8,34,3,34,323,8,
	34,1,34,3,34,326,8,34,1,34,3,34,329,8,34,1,34,1,34,4,34,333,8,34,11,34,
	12,34,334,1,34,3,34,338,8,34,1,34,3,34,341,8,34,1,34,1,34,1,34,1,34,3,34,
	347,8,34,3,34,349,8,34,1,35,1,35,3,35,353,8,35,1,36,3,36,356,8,36,1,36,
	1,36,1,36,1,36,1,36,5,36,363,8,36,10,36,12,36,366,9,36,1,36,1,36,1,36,1,
	36,1,37,1,37,3,37,374,8,37,1,38,3,38,377,8,38,1,38,1,38,1,38,1,38,5,38,
	383,8,38,10,38,12,38,386,9,38,1,38,1,38,3,38,390,8,38,1,38,1,38,1,38,1,
	38,5,38,396,8,38,10,38,12,38,399,9,38,1,38,3,38,402,8,38,1,39,1,39,1,39,
	5,39,407,8,39,10,39,12,39,410,9,39,1,39,1,39,1,39,1,39,5,39,416,8,39,10,
	39,12,39,419,9,39,1,39,3,39,422,8,39,1,40,1,40,1,40,3,40,427,8,40,1,41,
	1,41,1,41,1,41,3,41,433,8,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,
	43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,3,45,455,8,45,
	1,45,1,45,5,45,459,8,45,10,45,12,45,462,9,45,3,45,464,8,45,1,46,1,46,1,
	46,4,46,469,8,46,11,46,12,46,470,1,46,1,46,4,46,475,8,46,11,46,12,46,476,
	3,46,479,8,46,1,47,1,47,1,47,4,47,484,8,47,11,47,12,47,485,1,48,1,48,1,
	48,4,48,491,8,48,11,48,12,48,492,1,49,1,49,1,49,4,49,498,8,49,11,49,12,
	49,499,1,49,1,49,4,49,504,8,49,11,49,12,49,505,3,49,508,8,49,1,50,1,50,
	1,51,1,51,1,52,1,52,1,53,1,53,3,53,518,8,53,1,54,1,54,3,54,522,8,54,1,55,
	1,55,4,55,526,8,55,11,55,12,55,527,1,56,1,56,3,56,532,8,56,1,56,4,56,535,
	8,56,11,56,12,56,536,1,57,1,57,1,58,5,58,542,8,58,10,58,12,58,545,9,58,
	1,58,5,58,548,8,58,10,58,12,58,551,9,58,1,58,1,58,5,58,555,8,58,10,58,12,
	58,558,9,58,1,59,1,59,3,59,562,8,59,1,59,3,59,565,8,59,1,60,4,60,568,8,
	60,11,60,12,60,569,1,60,1,60,1,61,1,61,1,61,1,61,5,61,578,8,61,10,61,12,
	61,581,9,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,3,62,591,8,62,1,63,
	1,63,5,63,595,8,63,10,63,12,63,598,9,63,1,63,1,63,1,64,1,64,1,64,1,64,4,
	64,606,8,64,11,64,12,64,607,3,64,610,8,64,1,64,5,64,613,8,64,10,64,12,64,
	616,9,64,1,64,1,64,2,364,579,0,65,1,1,3,0,5,2,7,0,9,0,11,0,13,3,15,4,17,
	5,19,6,21,7,23,8,25,9,27,10,29,11,31,12,33,13,35,14,37,15,39,16,41,17,43,
	18,45,19,47,20,49,21,51,22,53,23,55,24,57,25,59,26,61,27,63,28,65,29,67,
	30,69,31,71,32,73,33,75,34,77,35,79,36,81,37,83,38,85,0,87,0,89,0,91,0,
	93,0,95,0,97,0,99,0,101,0,103,0,105,0,107,0,109,0,111,0,113,0,115,0,117,
	39,119,40,121,41,123,42,125,43,127,44,129,45,1,0,35,2,0,10,10,13,13,2,0,
	9,9,32,32,1,0,49,57,2,0,69,69,101,101,2,0,78,78,110,110,2,0,68,68,100,100,
	2,0,70,70,102,102,2,0,65,65,97,97,2,0,76,76,108,108,2,0,83,83,115,115,2,
	0,79,79,111,111,2,0,84,84,116,116,2,0,82,82,114,114,2,0,85,85,117,117,2,
	0,89,89,121,121,2,0,8,10,12,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
	95,97,122,2,0,0,31,96,96,4,0,67,67,82,82,99,99,114,114,3,0,10,10,13,13,
	39,39,3,0,10,10,13,13,34,34,2,0,72,72,104,104,1,0,39,39,1,0,34,34,2,0,34,
	34,39,39,9,0,48,48,63,63,92,92,97,98,102,102,110,110,114,114,116,116,118,
	118,2,0,66,66,98,98,2,0,90,90,122,122,2,0,88,88,120,120,1,0,48,57,1,0,48,
	55,4,0,69,69,88,88,101,101,120,120,2,0,65,70,97,102,2,0,43,43,45,45,681,
	0,1,1,0,0,0,0,5,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
	0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,
	31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
	0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,
	53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
	0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,
	75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,117,1,
	0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
	0,0,0,129,1,0,0,0,1,131,1,0,0,0,3,142,1,0,0,0,5,149,1,0,0,0,7,173,1,0,0,
	0,9,195,1,0,0,0,11,201,1,0,0,0,13,210,1,0,0,0,15,215,1,0,0,0,17,217,1,0,
	0,0,19,219,1,0,0,0,21,221,1,0,0,0,23,223,1,0,0,0,25,225,1,0,0,0,27,227,
	1,0,0,0,29,229,1,0,0,0,31,231,1,0,0,0,33,233,1,0,0,0,35,235,1,0,0,0,37,
	237,1,0,0,0,39,239,1,0,0,0,41,241,1,0,0,0,43,243,1,0,0,0,45,245,1,0,0,0,
	47,247,1,0,0,0,49,249,1,0,0,0,51,261,1,0,0,0,53,272,1,0,0,0,55,274,1,0,
	0,0,57,279,1,0,0,0,59,282,1,0,0,0,61,285,1,0,0,0,63,296,1,0,0,0,65,306,
	1,0,0,0,67,308,1,0,0,0,69,348,1,0,0,0,71,352,1,0,0,0,73,355,1,0,0,0,75,
	373,1,0,0,0,77,401,1,0,0,0,79,421,1,0,0,0,81,426,1,0,0,0,83,428,1,0,0,0,
	85,434,1,0,0,0,87,440,1,0,0,0,89,450,1,0,0,0,91,463,1,0,0,0,93,478,1,0,
	0,0,95,480,1,0,0,0,97,487,1,0,0,0,99,507,1,0,0,0,101,509,1,0,0,0,103,511,
	1,0,0,0,105,513,1,0,0,0,107,517,1,0,0,0,109,521,1,0,0,0,111,523,1,0,0,0,
	113,529,1,0,0,0,115,538,1,0,0,0,117,543,1,0,0,0,119,564,1,0,0,0,121,567,
	1,0,0,0,123,573,1,0,0,0,125,590,1,0,0,0,127,592,1,0,0,0,129,609,1,0,0,0,
	131,132,5,45,0,0,132,133,5,45,0,0,133,137,1,0,0,0,134,136,8,0,0,0,135,134,
	1,0,0,0,136,139,1,0,0,0,137,135,1,0,0,0,137,138,1,0,0,0,138,140,1,0,0,0,
	139,137,1,0,0,0,140,141,6,0,0,0,141,2,1,0,0,0,142,143,2,48,49,0,143,144,
	2,48,49,0,144,145,2,48,49,0,145,4,1,0,0,0,146,148,7,1,0,0,147,146,1,0,0,
	0,148,151,1,0,0,0,149,147,1,0,0,0,149,150,1,0,0,0,150,152,1,0,0,0,151,149,
	1,0,0,0,152,156,3,7,3,0,153,155,7,1,0,0,154,153,1,0,0,0,155,158,1,0,0,0,
	156,154,1,0,0,0,156,157,1,0,0,0,157,162,1,0,0,0,158,156,1,0,0,0,159,161,
	3,121,60,0,160,159,1,0,0,0,161,164,1,0,0,0,162,160,1,0,0,0,162,163,1,0,
	0,0,163,165,1,0,0,0,164,162,1,0,0,0,165,167,3,65,32,0,166,168,3,117,58,
	0,167,166,1,0,0,0,168,169,1,0,0,0,169,167,1,0,0,0,169,170,1,0,0,0,170,6,
	1,0,0,0,171,174,3,9,4,0,172,174,3,11,5,0,173,171,1,0,0,0,173,172,1,0,0,
	0,174,8,1,0,0,0,175,177,3,19,9,0,176,175,1,0,0,0,177,178,1,0,0,0,178,176,
	1,0,0,0,178,179,1,0,0,0,179,196,1,0,0,0,180,182,3,21,10,0,181,180,1,0,0,
	0,182,183,1,0,0,0,183,181,1,0,0,0,183,184,1,0,0,0,184,196,1,0,0,0,185,187,
	3,15,7,0,186,185,1,0,0,0,187,188,1,0,0,0,188,186,1,0,0,0,188,189,1,0,0,
	0,189,196,1,0,0,0,190,192,3,17,8,0,191,190,1,0,0,0,192,193,1,0,0,0,193,
	191,1,0,0,0,193,194,1,0,0,0,194,196,1,0,0,0,195,176,1,0,0,0,195,181,1,0,
	0,0,195,186,1,0,0,0,195,191,1,0,0,0,196,10,1,0,0,0,197,202,3,19,9,0,198,
	202,3,21,10,0,199,202,3,15,7,0,200,202,3,17,8,0,201,197,1,0,0,0,201,198,
	1,0,0,0,201,199,1,0,0,0,201,200,1,0,0,0,202,203,1,0,0,0,203,207,7,2,0,0,
	204,206,3,101,50,0,205,204,1,0,0,0,206,209,1,0,0,0,207,205,1,0,0,0,207,
	208,1,0,0,0,208,12,1,0,0,0,209,207,1,0,0,0,210,211,5,47,0,0,211,212,7,3,
	0,0,212,213,7,4,0,0,213,214,7,5,0,0,214,14,1,0,0,0,215,216,5,167,0,0,216,
	16,1,0,0,0,217,218,5,8364,0,0,218,18,1,0,0,0,219,220,5,94,0,0,220,20,1,
	0,0,0,221,222,5,126,0,0,222,22,1,0,0,0,223,224,5,62,0,0,224,24,1,0,0,0,
	225,226,5,61,0,0,226,26,1,0,0,0,227,228,5,35,0,0,228,28,1,0,0,0,229,230,
	5,44,0,0,230,30,1,0,0,0,231,232,5,58,0,0,232,32,1,0,0,0,233,234,5,91,0,
	0,234,34,1,0,0,0,235,236,5,93,0,0,236,36,1,0,0,0,237,238,5,123,0,0,238,
	38,1,0,0,0,239,240,5,125,0,0,240,40,1,0,0,0,241,242,5,43,0,0,242,42,1,0,
	0,0,243,244,5,36,0,0,244,44,1,0,0,0,245,246,5,37,0,0,246,46,1,0,0,0,247,
	248,5,64,0,0,248,48,1,0,0,0,249,250,5,59,0,0,250,50,1,0,0,0,251,252,7,6,
	0,0,252,253,7,7,0,0,253,254,7,8,0,0,254,255,7,9,0,0,255,262,7,3,0,0,256,
	257,7,10,0,0,257,258,7,6,0,0,258,262,7,6,0,0,259,260,7,4,0,0,260,262,7,
	10,0,0,261,251,1,0,0,0,261,256,1,0,0,0,261,259,1,0,0,0,262,52,1,0,0,0,263,
	264,7,11,0,0,264,265,7,12,0,0,265,266,7,13,0,0,266,273,7,3,0,0,267,268,
	7,10,0,0,268,273,7,4,0,0,269,270,7,14,0,0,270,271,7,3,0,0,271,273,7,9,0,
	0,272,263,1,0,0,0,272,267,1,0,0,0,272,269,1,0,0,0,273,54,1,0,0,0,274,275,
	7,4,0,0,275,276,7,13,0,0,276,277,7,8,0,0,277,278,7,8,0,0,278,56,1,0,0,0,
	279,280,5,123,0,0,280,281,5,125,0,0,281,58,1,0,0,0,282,283,5,91,0,0,283,
	284,5,93,0,0,284,60,1,0,0,0,285,286,5,35,0,0,286,287,5,33,0,0,287,291,1,
	0,0,0,288,290,8,15,0,0,289,288,1,0,0,0,290,293,1,0,0,0,291,289,1,0,0,0,
	291,292,1,0,0,0,292,294,1,0,0,0,293,291,1,0,0,0,294,295,3,117,58,0,295,
	62,1,0,0,0,296,297,3,65,32,0,297,64,1,0,0,0,298,302,7,16,0,0,299,301,7,
	17,0,0,300,299,1,0,0,0,301,304,1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,
	303,307,1,0,0,0,304,302,1,0,0,0,305,307,3,67,33,0,306,298,1,0,0,0,306,305,
	1,0,0,0,307,66,1,0,0,0,308,312,5,96,0,0,309,311,8,18,0,0,310,309,1,0,0,
	0,311,314,1,0,0,0,312,310,1,0,0,0,312,313,1,0,0,0,313,315,1,0,0,0,314,312,
	1,0,0,0,315,316,5,96,0,0,316,68,1,0,0,0,317,322,3,89,44,0,318,320,5,46,
	0,0,319,321,3,89,44,0,320,319,1,0,0,0,320,321,1,0,0,0,321,323,1,0,0,0,322,
	318,1,0,0,0,322,323,1,0,0,0,323,325,1,0,0,0,324,326,3,113,56,0,325,324,
	1,0,0,0,325,326,1,0,0,0,326,349,1,0,0,0,327,329,3,115,57,0,328,327,1,0,
	0,0,328,329,1,0,0,0,329,330,1,0,0,0,330,332,5,46,0,0,331,333,3,101,50,0,
	332,331,1,0,0,0,333,334,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,337,
	1,0,0,0,336,338,3,113,56,0,337,336,1,0,0,0,337,338,1,0,0,0,338,349,1,0,
	0,0,339,341,3,115,57,0,340,339,1,0,0,0,340,341,1,0,0,0,341,346,1,0,0,0,
	342,347,3,93,46,0,343,347,3,95,47,0,344,347,3,97,48,0,345,347,3,99,49,0,
	346,342,1,0,0,0,346,343,1,0,0,0,346,344,1,0,0,0,346,345,1,0,0,0,347,349,
	1,0,0,0,348,317,1,0,0,0,348,328,1,0,0,0,348,340,1,0,0,0,349,70,1,0,0,0,
	350,353,3,73,36,0,351,353,3,75,37,0,352,350,1,0,0,0,352,351,1,0,0,0,353,
	72,1,0,0,0,354,356,7,19,0,0,355,354,1,0,0,0,355,356,1,0,0,0,356,357,1,0,
	0,0,357,358,5,34,0,0,358,359,5,34,0,0,359,360,5,34,0,0,360,364,1,0,0,0,
	361,363,9,0,0,0,362,361,1,0,0,0,363,366,1,0,0,0,364,365,1,0,0,0,364,362,
	1,0,0,0,365,367,1,0,0,0,366,364,1,0,0,0,367,368,5,34,0,0,368,369,5,34,0,
	0,369,370,5,34,0,0,370,74,1,0,0,0,371,374,3,77,38,0,372,374,3,79,39,0,373,
	371,1,0,0,0,373,372,1,0,0,0,374,76,1,0,0,0,375,377,7,19,0,0,376,375,1,0,
	0,0,376,377,1,0,0,0,377,378,1,0,0,0,378,384,5,39,0,0,379,380,5,92,0,0,380,
	383,5,39,0,0,381,383,8,20,0,0,382,379,1,0,0,0,382,381,1,0,0,0,383,386,1,
	0,0,0,384,382,1,0,0,0,384,385,1,0,0,0,385,387,1,0,0,0,386,384,1,0,0,0,387,
	402,5,39,0,0,388,390,7,19,0,0,389,388,1,0,0,0,389,390,1,0,0,0,390,391,1,
	0,0,0,391,397,5,34,0,0,392,393,5,92,0,0,393,396,5,34,0,0,394,396,8,21,0,
	0,395,392,1,0,0,0,395,394,1,0,0,0,396,399,1,0,0,0,397,395,1,0,0,0,397,398,
	1,0,0,0,398,400,1,0,0,0,399,397,1,0,0,0,400,402,5,34,0,0,401,376,1,0,0,
	0,401,389,1,0,0,0,402,78,1,0,0,0,403,404,7,22,0,0,404,408,5,39,0,0,405,
	407,8,23,0,0,406,405,1,0,0,0,407,410,1,0,0,0,408,406,1,0,0,0,408,409,1,
	0,0,0,409,411,1,0,0,0,410,408,1,0,0,0,411,422,5,39,0,0,412,413,7,22,0,0,
	413,417,5,34,0,0,414,416,8,24,0,0,415,414,1,0,0,0,416,419,1,0,0,0,417,415,
	1,0,0,0,417,418,1,0,0,0,418,420,1,0,0,0,419,417,1,0,0,0,420,422,5,34,0,
	0,421,403,1,0,0,0,421,412,1,0,0,0,422,80,1,0,0,0,423,424,5,92,0,0,424,427,
	7,25,0,0,425,427,3,83,41,0,426,423,1,0,0,0,426,425,1,0,0,0,427,82,1,0,0,
	0,428,432,5,92,0,0,429,433,7,26,0,0,430,433,3,85,42,0,431,433,3,87,43,0,
	432,429,1,0,0,0,432,430,1,0,0,0,432,431,1,0,0,0,433,84,1,0,0,0,434,435,
	5,117,0,0,435,436,3,109,54,0,436,437,3,109,54,0,437,438,3,109,54,0,438,
	439,3,109,54,0,439,86,1,0,0,0,440,441,5,85,0,0,441,442,3,109,54,0,442,443,
	3,109,54,0,443,444,3,109,54,0,444,445,3,109,54,0,445,446,3,109,54,0,446,
	447,3,109,54,0,447,448,3,109,54,0,448,449,3,109,54,0,449,88,1,0,0,0,450,
	451,3,91,45,0,451,90,1,0,0,0,452,464,5,48,0,0,453,455,3,115,57,0,454,453,
	1,0,0,0,454,455,1,0,0,0,455,456,1,0,0,0,456,460,7,2,0,0,457,459,3,101,50,
	0,458,457,1,0,0,0,459,462,1,0,0,0,460,458,1,0,0,0,460,461,1,0,0,0,461,464,
	1,0,0,0,462,460,1,0,0,0,463,452,1,0,0,0,463,454,1,0,0,0,464,92,1,0,0,0,
	465,466,5,48,0,0,466,468,7,27,0,0,467,469,3,103,51,0,468,467,1,0,0,0,469,
	470,1,0,0,0,470,468,1,0,0,0,470,471,1,0,0,0,471,479,1,0,0,0,472,474,5,37,
	0,0,473,475,3,103,51,0,474,473,1,0,0,0,475,476,1,0,0,0,476,474,1,0,0,0,
	476,477,1,0,0,0,477,479,1,0,0,0,478,465,1,0,0,0,478,472,1,0,0,0,479,94,
	1,0,0,0,480,481,5,48,0,0,481,483,7,10,0,0,482,484,3,105,52,0,483,482,1,
	0,0,0,484,485,1,0,0,0,485,483,1,0,0,0,485,486,1,0,0,0,486,96,1,0,0,0,487,
	488,5,48,0,0,488,490,7,28,0,0,489,491,3,107,53,0,490,489,1,0,0,0,491,492,
	1,0,0,0,492,490,1,0,0,0,492,493,1,0,0,0,493,98,1,0,0,0,494,495,5,48,0,0,
	495,497,7,29,0,0,496,498,3,109,54,0,497,496,1,0,0,0,498,499,1,0,0,0,499,
	497,1,0,0,0,499,500,1,0,0,0,500,508,1,0,0,0,501,503,5,35,0,0,502,504,3,
	109,54,0,503,502,1,0,0,0,504,505,1,0,0,0,505,503,1,0,0,0,505,506,1,0,0,
	0,506,508,1,0,0,0,507,494,1,0,0,0,507,501,1,0,0,0,508,100,1,0,0,0,509,510,
	7,30,0,0,510,102,1,0,0,0,511,512,2,48,49,0,512,104,1,0,0,0,513,514,7,31,
	0,0,514,106,1,0,0,0,515,518,3,101,50,0,516,518,7,32,0,0,517,515,1,0,0,0,
	517,516,1,0,0,0,518,108,1,0,0,0,519,522,3,101,50,0,520,522,7,33,0,0,521,
	519,1,0,0,0,521,520,1,0,0,0,522,110,1,0,0,0,523,525,5,46,0,0,524,526,3,
	101,50,0,525,524,1,0,0,0,526,527,1,0,0,0,527,525,1,0,0,0,527,528,1,0,0,
	0,528,112,1,0,0,0,529,531,7,3,0,0,530,532,3,115,57,0,531,530,1,0,0,0,531,
	532,1,0,0,0,532,534,1,0,0,0,533,535,3,101,50,0,534,533,1,0,0,0,535,536,
	1,0,0,0,536,534,1,0,0,0,536,537,1,0,0,0,537,114,1,0,0,0,538,539,7,34,0,
	0,539,116,1,0,0,0,540,542,3,121,60,0,541,540,1,0,0,0,542,545,1,0,0,0,543,
	541,1,0,0,0,543,544,1,0,0,0,544,549,1,0,0,0,545,543,1,0,0,0,546,548,3,125,
	62,0,547,546,1,0,0,0,548,551,1,0,0,0,549,547,1,0,0,0,549,550,1,0,0,0,550,
	552,1,0,0,0,551,549,1,0,0,0,552,556,3,119,59,0,553,555,3,125,62,0,554,553,
	1,0,0,0,555,558,1,0,0,0,556,554,1,0,0,0,556,557,1,0,0,0,557,118,1,0,0,0,
	558,556,1,0,0,0,559,561,5,13,0,0,560,562,5,10,0,0,561,560,1,0,0,0,561,562,
	1,0,0,0,562,565,1,0,0,0,563,565,5,10,0,0,564,559,1,0,0,0,564,563,1,0,0,
	0,565,120,1,0,0,0,566,568,7,1,0,0,567,566,1,0,0,0,568,569,1,0,0,0,569,567,
	1,0,0,0,569,570,1,0,0,0,570,571,1,0,0,0,571,572,6,60,0,0,572,122,1,0,0,
	0,573,574,5,47,0,0,574,575,5,42,0,0,575,579,1,0,0,0,576,578,9,0,0,0,577,
	576,1,0,0,0,578,581,1,0,0,0,579,580,1,0,0,0,579,577,1,0,0,0,580,582,1,0,
	0,0,581,579,1,0,0,0,582,583,5,42,0,0,583,584,5,47,0,0,584,585,1,0,0,0,585,
	586,6,61,1,0,586,124,1,0,0,0,587,591,3,127,63,0,588,591,3,129,64,0,589,
	591,3,123,61,0,590,587,1,0,0,0,590,588,1,0,0,0,590,589,1,0,0,0,591,126,
	1,0,0,0,592,596,5,59,0,0,593,595,8,0,0,0,594,593,1,0,0,0,595,598,1,0,0,
	0,596,594,1,0,0,0,596,597,1,0,0,0,597,599,1,0,0,0,598,596,1,0,0,0,599,600,
	6,63,1,0,600,128,1,0,0,0,601,602,5,47,0,0,602,610,5,47,0,0,603,605,5,35,
	0,0,604,606,7,1,0,0,605,604,1,0,0,0,606,607,1,0,0,0,607,605,1,0,0,0,607,
	608,1,0,0,0,608,610,1,0,0,0,609,601,1,0,0,0,609,603,1,0,0,0,610,614,1,0,
	0,0,611,613,8,0,0,0,612,611,1,0,0,0,613,616,1,0,0,0,614,612,1,0,0,0,614,
	615,1,0,0,0,615,617,1,0,0,0,616,614,1,0,0,0,617,618,6,64,1,0,618,130,1,
	0,0,0,73,0,137,149,156,162,169,173,178,183,188,193,195,201,207,261,272,
	291,302,306,312,320,322,325,328,334,337,340,346,348,352,355,364,373,376,
	382,384,389,395,397,401,408,417,421,426,432,454,460,463,470,476,478,485,
	492,499,505,507,517,521,527,531,536,543,549,556,561,564,569,579,590,596,
	607,609,614,2,6,0,0,0,1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!YiniLexer.__ATN) {
			YiniLexer.__ATN = new ATNDeserializer().deserialize(YiniLexer._serializedATN);
		}

		return YiniLexer.__ATN;
	}


	static DecisionsToDFA = YiniLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}