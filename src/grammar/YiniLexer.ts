// Generated from grammar/v1.0.0-rc.2x/YiniLexer.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class YiniLexer extends Lexer {
	public static readonly YINI_MARKER = 1;
	public static readonly SECTION_HEAD = 2;
	public static readonly TERMINAL_TOKEN = 3;
	public static readonly SS = 4;
	public static readonly EUR = 5;
	public static readonly CARET = 6;
	public static readonly GT = 7;
	public static readonly LT = 8;
	public static readonly EQ = 9;
	public static readonly HASH = 10;
	public static readonly COMMA = 11;
	public static readonly COLON = 12;
	public static readonly OB = 13;
	public static readonly CB = 14;
	public static readonly OC = 15;
	public static readonly CC = 16;
	public static readonly PLUS = 17;
	public static readonly DOLLAR = 18;
	public static readonly PC = 19;
	public static readonly AT = 20;
	public static readonly BOOLEAN_FALSE = 21;
	public static readonly BOOLEAN_TRUE = 22;
	public static readonly NULL = 23;
	public static readonly EMPTY_OBJECT = 24;
	public static readonly EMPTY_LIST = 25;
	public static readonly SHEBANG = 26;
	public static readonly NUMBER = 27;
	public static readonly KEY = 28;
	public static readonly IDENT = 29;
	public static readonly IDENT_BACKTICKED = 30;
	public static readonly STRING = 31;
	public static readonly TRIPLE_QUOTED_STRING = 32;
	public static readonly SINGLE_OR_DOUBLE = 33;
	public static readonly R_AND_C_STRING = 34;
	public static readonly HYPER_STRING = 35;
	public static readonly ESC_SEQ = 36;
	public static readonly ESC_SEQ_BASE = 37;
	public static readonly NL = 38;
	public static readonly SINGLE_NL = 39;
	public static readonly WS = 40;
	public static readonly BLOCK_COMMENT = 41;
	public static readonly COMMENT = 42;
	public static readonly LINE_COMMENT = 43;
	public static readonly INLINE_COMMENT = 44;
	public static readonly IDENT_INVALID = 45;
	public static readonly REST = 46;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            "'\\u00A7'", 
                                                            "'\\u20AC'", 
                                                            "'^'", "'>'", 
                                                            "'<'", "'='", 
                                                            "'#'", "','", 
                                                            "':'", "'['", 
                                                            "']'", "'{'", 
                                                            "'}'", "'+'", 
                                                            "'$'", "'%'", 
                                                            "'@'", null, 
                                                            null, null, 
                                                            "'{}'", "'[]'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "YINI_MARKER", 
                                                             "SECTION_HEAD", 
                                                             "TERMINAL_TOKEN", 
                                                             "SS", "EUR", 
                                                             "CARET", "GT", 
                                                             "LT", "EQ", 
                                                             "HASH", "COMMA", 
                                                             "COLON", "OB", 
                                                             "CB", "OC", 
                                                             "CC", "PLUS", 
                                                             "DOLLAR", "PC", 
                                                             "AT", "BOOLEAN_FALSE", 
                                                             "BOOLEAN_TRUE", 
                                                             "NULL", "EMPTY_OBJECT", 
                                                             "EMPTY_LIST", 
                                                             "SHEBANG", 
                                                             "NUMBER", "KEY", 
                                                             "IDENT", "IDENT_BACKTICKED", 
                                                             "STRING", "TRIPLE_QUOTED_STRING", 
                                                             "SINGLE_OR_DOUBLE", 
                                                             "R_AND_C_STRING", 
                                                             "HYPER_STRING", 
                                                             "ESC_SEQ", 
                                                             "ESC_SEQ_BASE", 
                                                             "NL", "SINGLE_NL", 
                                                             "WS", "BLOCK_COMMENT", 
                                                             "COMMENT", 
                                                             "LINE_COMMENT", 
                                                             "INLINE_COMMENT", 
                                                             "IDENT_INVALID", 
                                                             "REST" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"YINI_MARKER", "EBD", "SECTION_HEAD", "SECTION_MARKER", "SECTION_MARKER_BASIC_REPEAT", 
		"SECTION_MARKER_SHORTHAND", "SECTION_MARKER_INVALID", "TERMINAL_TOKEN", 
		"SS", "EUR", "CARET", "GT", "LT", "EQ", "HASH", "COMMA", "COLON", "OB", 
		"CB", "OC", "CC", "PLUS", "DOLLAR", "PC", "AT", "BOOLEAN_FALSE", "BOOLEAN_TRUE", 
		"NULL", "EMPTY_OBJECT", "EMPTY_LIST", "SHEBANG", "NUMBER", "KEY", "IDENT", 
		"IDENT_BACKTICKED", "STRING", "TRIPLE_QUOTED_STRING", "SINGLE_OR_DOUBLE", 
		"R_AND_C_STRING", "HYPER_STRING", "ESC_SEQ", "ESC_SEQ_BASE", "UNICODE16", 
		"UNICODE32", "INTEGER", "DECIMAL_INTEGER", "BIN_INTEGER", "OCT_INTEGER", 
		"DUO_INTEGER", "HEX_INTEGER", "DIGIT", "BIN_DIGIT", "OCT_DIGIT", "DUO_DIGIT", 
		"HEX_DIGIT", "FRACTION", "EXPONENT", "SIGN", "NL", "SINGLE_NL", "WS", 
		"BLOCK_COMMENT", "COMMENT", "DISABLE_LINE_MARKER", "LINE_COMMENT", "INLINE_COMMENT", 
		"IDENT_INVALID", "REST_CHAR", "REST",
	];


	  public atLineStart(): boolean { return this.column === 0; }


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, YiniLexer._ATN, YiniLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "YiniLexer.g4"; }

	public get literalNames(): (string | null)[] { return YiniLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return YiniLexer.symbolicNames; }
	public get ruleNames(): string[] { return YiniLexer.ruleNames; }

	public get serializedATN(): number[] { return YiniLexer._serializedATN; }

	public get channelNames(): string[] { return YiniLexer.channelNames; }

	public get modeNames(): string[] { return YiniLexer.modeNames; }

	// @Override
	public sempred(localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 64:
			return this.LINE_COMMENT_sempred(localctx, predIndex);
		}
		return true;
	}
	private LINE_COMMENT_sempred(localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.atLineStart();
		}
		return true;
	}

	public static readonly _serializedATN: number[] = [4,0,46,663,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,5,2,152,
	8,2,10,2,12,2,155,9,2,1,2,5,2,158,8,2,10,2,12,2,161,9,2,1,2,1,2,4,2,165,
	8,2,11,2,12,2,166,1,3,1,3,1,3,3,3,172,8,3,1,4,4,4,175,8,4,11,4,12,4,176,
	1,4,4,4,180,8,4,11,4,12,4,181,1,4,4,4,185,8,4,11,4,12,4,186,1,4,4,4,190,
	8,4,11,4,12,4,191,3,4,194,8,4,1,5,1,5,1,5,1,5,3,5,200,8,5,1,5,1,5,5,5,204,
	8,5,10,5,12,5,207,9,5,1,6,1,6,1,6,1,6,4,6,213,8,6,11,6,12,6,214,1,6,4,6,
	218,8,6,11,6,12,6,219,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
	1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,
	18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,
	1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,271,8,25,1,26,1,26,1,26,1,
	26,1,26,1,26,1,26,1,26,1,26,3,26,282,8,26,1,27,1,27,1,27,1,27,1,27,1,28,
	1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,30,5,30,299,8,30,10,30,12,30,
	302,9,30,1,30,1,30,1,31,3,31,307,8,31,1,31,1,31,1,31,4,31,312,8,31,11,31,
	12,31,313,3,31,316,8,31,1,31,3,31,319,8,31,1,31,3,31,322,8,31,1,31,1,31,
	4,31,326,8,31,11,31,12,31,327,1,31,3,31,331,8,31,1,31,3,31,334,8,31,1,31,
	1,31,1,31,1,31,3,31,340,8,31,3,31,342,8,31,1,32,1,32,1,33,1,33,5,33,348,
	8,33,10,33,12,33,351,9,33,1,33,1,33,3,33,355,8,33,1,34,1,34,5,34,359,8,
	34,10,34,12,34,362,9,34,1,34,1,34,1,35,1,35,3,35,368,8,35,1,36,3,36,371,
	8,36,1,36,1,36,1,36,1,36,1,36,5,36,378,8,36,10,36,12,36,381,9,36,1,36,1,
	36,1,36,1,36,1,37,1,37,3,37,389,8,37,1,38,3,38,392,8,38,1,38,1,38,1,38,
	1,38,5,38,398,8,38,10,38,12,38,401,9,38,1,38,1,38,3,38,405,8,38,1,38,1,
	38,1,38,1,38,5,38,411,8,38,10,38,12,38,414,9,38,1,38,3,38,417,8,38,1,39,
	1,39,1,39,5,39,422,8,39,10,39,12,39,425,9,39,1,39,1,39,1,39,1,39,5,39,431,
	8,39,10,39,12,39,434,9,39,1,39,3,39,437,8,39,1,40,1,40,1,40,3,40,442,8,
	40,1,41,1,41,1,41,1,41,3,41,448,8,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,
	1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,3,45,470,
	8,45,1,45,1,45,5,45,474,8,45,10,45,12,45,477,9,45,3,45,479,8,45,1,46,1,
	46,1,46,4,46,484,8,46,11,46,12,46,485,1,46,1,46,4,46,490,8,46,11,46,12,
	46,491,3,46,494,8,46,1,47,1,47,1,47,4,47,499,8,47,11,47,12,47,500,1,48,
	1,48,1,48,4,48,506,8,48,11,48,12,48,507,1,49,1,49,1,49,4,49,513,8,49,11,
	49,12,49,514,1,49,1,49,4,49,519,8,49,11,49,12,49,520,3,49,523,8,49,1,50,
	1,50,1,51,1,51,1,52,1,52,1,53,1,53,3,53,533,8,53,1,54,1,54,3,54,537,8,54,
	1,55,1,55,4,55,541,8,55,11,55,12,55,542,1,56,1,56,3,56,547,8,56,1,56,4,
	56,550,8,56,11,56,12,56,551,1,57,1,57,1,58,5,58,557,8,58,10,58,12,58,560,
	9,58,1,58,5,58,563,8,58,10,58,12,58,566,9,58,1,58,1,58,5,58,570,8,58,10,
	58,12,58,573,9,58,1,59,1,59,3,59,577,8,59,1,59,3,59,580,8,59,1,60,4,60,
	583,8,60,11,60,12,60,584,1,60,1,60,1,61,1,61,1,61,1,61,5,61,593,8,61,10,
	61,12,61,596,9,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,3,62,606,8,62,
	1,63,1,63,1,63,1,64,1,64,5,64,613,8,64,10,64,12,64,616,9,64,1,64,1,64,3,
	64,620,8,64,1,64,5,64,623,8,64,10,64,12,64,626,9,64,1,64,1,64,1,65,1,65,
	1,65,1,65,4,65,634,8,65,11,65,12,65,635,3,65,638,8,65,1,65,5,65,641,8,65,
	10,65,12,65,644,9,65,1,65,1,65,1,66,1,66,5,66,650,8,66,10,66,12,66,653,
	9,66,1,67,1,67,1,68,1,68,5,68,659,8,68,10,68,12,68,662,9,68,2,379,594,0,
	69,1,1,3,0,5,2,7,0,9,0,11,0,13,0,15,3,17,4,19,5,21,6,23,7,25,8,27,9,29,
	10,31,11,33,12,35,13,37,14,39,15,41,16,43,17,45,18,47,19,49,20,51,21,53,
	22,55,23,57,24,59,25,61,26,63,27,65,28,67,29,69,30,71,31,73,32,75,33,77,
	34,79,35,81,36,83,37,85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,
	0,105,0,107,0,109,0,111,0,113,0,115,0,117,38,119,39,121,40,123,41,125,42,
	127,0,129,43,131,44,133,45,135,0,137,46,1,0,38,2,0,89,89,121,121,2,0,73,
	73,105,105,2,0,78,78,110,110,2,0,9,9,32,32,1,0,49,57,2,0,69,69,101,101,
	2,0,68,68,100,100,2,0,70,70,102,102,2,0,65,65,97,97,2,0,76,76,108,108,2,
	0,83,83,115,115,2,0,79,79,111,111,2,0,84,84,116,116,2,0,82,82,114,114,2,
	0,85,85,117,117,2,0,8,10,12,13,3,0,65,90,95,95,97,122,5,0,46,46,48,57,65,
	90,95,95,97,122,2,0,0,31,96,96,4,0,67,67,82,82,99,99,114,114,3,0,10,10,
	13,13,39,39,3,0,10,10,13,13,34,34,2,0,72,72,104,104,1,0,39,39,1,0,34,34,
	2,0,34,34,39,39,9,0,48,48,63,63,92,92,97,98,102,102,110,110,114,114,116,
	116,118,118,2,0,66,66,98,98,2,0,90,90,122,122,2,0,88,88,120,120,1,0,48,
	57,1,0,48,55,6,0,65,66,69,69,88,88,97,98,101,101,120,120,2,0,65,70,97,102,
	2,0,43,43,45,45,2,0,10,10,13,13,4,0,48,57,65,90,95,95,97,122,13,0,9,10,
	13,13,32,32,34,34,39,39,44,45,47,58,61,61,91,91,93,93,96,96,123,123,125,
	125,732,0,1,1,0,0,0,0,5,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
	0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
	0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
	0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
	0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,
	0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
	0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,117,1,0,0,0,
	0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,129,1,0,0,0,0,
	131,1,0,0,0,0,133,1,0,0,0,0,137,1,0,0,0,1,139,1,0,0,0,3,145,1,0,0,0,5,149,
	1,0,0,0,7,171,1,0,0,0,9,193,1,0,0,0,11,199,1,0,0,0,13,212,1,0,0,0,15,221,
	1,0,0,0,17,226,1,0,0,0,19,228,1,0,0,0,21,230,1,0,0,0,23,232,1,0,0,0,25,
	234,1,0,0,0,27,236,1,0,0,0,29,238,1,0,0,0,31,240,1,0,0,0,33,242,1,0,0,0,
	35,244,1,0,0,0,37,246,1,0,0,0,39,248,1,0,0,0,41,250,1,0,0,0,43,252,1,0,
	0,0,45,254,1,0,0,0,47,256,1,0,0,0,49,258,1,0,0,0,51,270,1,0,0,0,53,281,
	1,0,0,0,55,283,1,0,0,0,57,288,1,0,0,0,59,291,1,0,0,0,61,294,1,0,0,0,63,
	341,1,0,0,0,65,343,1,0,0,0,67,354,1,0,0,0,69,356,1,0,0,0,71,367,1,0,0,0,
	73,370,1,0,0,0,75,388,1,0,0,0,77,416,1,0,0,0,79,436,1,0,0,0,81,441,1,0,
	0,0,83,443,1,0,0,0,85,449,1,0,0,0,87,455,1,0,0,0,89,465,1,0,0,0,91,478,
	1,0,0,0,93,493,1,0,0,0,95,495,1,0,0,0,97,502,1,0,0,0,99,522,1,0,0,0,101,
	524,1,0,0,0,103,526,1,0,0,0,105,528,1,0,0,0,107,532,1,0,0,0,109,536,1,0,
	0,0,111,538,1,0,0,0,113,544,1,0,0,0,115,553,1,0,0,0,117,558,1,0,0,0,119,
	579,1,0,0,0,121,582,1,0,0,0,123,588,1,0,0,0,125,605,1,0,0,0,127,607,1,0,
	0,0,129,610,1,0,0,0,131,637,1,0,0,0,133,647,1,0,0,0,135,654,1,0,0,0,137,
	656,1,0,0,0,139,140,5,64,0,0,140,141,7,0,0,0,141,142,7,1,0,0,142,143,7,
	2,0,0,143,144,7,1,0,0,144,2,1,0,0,0,145,146,2,48,49,0,146,147,2,48,49,0,
	147,148,2,48,49,0,148,4,1,0,0,0,149,153,3,7,3,0,150,152,7,3,0,0,151,150,
	1,0,0,0,152,155,1,0,0,0,153,151,1,0,0,0,153,154,1,0,0,0,154,159,1,0,0,0,
	155,153,1,0,0,0,156,158,3,121,60,0,157,156,1,0,0,0,158,161,1,0,0,0,159,
	157,1,0,0,0,159,160,1,0,0,0,160,162,1,0,0,0,161,159,1,0,0,0,162,164,3,67,
	33,0,163,165,3,117,58,0,164,163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,0,
	166,167,1,0,0,0,167,6,1,0,0,0,168,172,3,9,4,0,169,172,3,11,5,0,170,172,
	3,13,6,0,171,168,1,0,0,0,171,169,1,0,0,0,171,170,1,0,0,0,172,8,1,0,0,0,
	173,175,3,21,10,0,174,173,1,0,0,0,175,176,1,0,0,0,176,174,1,0,0,0,176,177,
	1,0,0,0,177,194,1,0,0,0,178,180,3,25,12,0,179,178,1,0,0,0,180,181,1,0,0,
	0,181,179,1,0,0,0,181,182,1,0,0,0,182,194,1,0,0,0,183,185,3,17,8,0,184,
	183,1,0,0,0,185,186,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,194,1,0,
	0,0,188,190,3,19,9,0,189,188,1,0,0,0,190,191,1,0,0,0,191,189,1,0,0,0,191,
	192,1,0,0,0,192,194,1,0,0,0,193,174,1,0,0,0,193,179,1,0,0,0,193,184,1,0,
	0,0,193,189,1,0,0,0,194,10,1,0,0,0,195,200,3,21,10,0,196,200,3,25,12,0,
	197,200,3,17,8,0,198,200,3,19,9,0,199,195,1,0,0,0,199,196,1,0,0,0,199,197,
	1,0,0,0,199,198,1,0,0,0,200,201,1,0,0,0,201,205,7,4,0,0,202,204,3,101,50,
	0,203,202,1,0,0,0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,12,
	1,0,0,0,207,205,1,0,0,0,208,213,3,21,10,0,209,213,3,25,12,0,210,213,3,17,
	8,0,211,213,3,19,9,0,212,208,1,0,0,0,212,209,1,0,0,0,212,210,1,0,0,0,212,
	211,1,0,0,0,213,214,1,0,0,0,214,212,1,0,0,0,214,215,1,0,0,0,215,217,1,0,
	0,0,216,218,3,101,50,0,217,216,1,0,0,0,218,219,1,0,0,0,219,217,1,0,0,0,
	219,220,1,0,0,0,220,14,1,0,0,0,221,222,5,47,0,0,222,223,7,5,0,0,223,224,
	7,2,0,0,224,225,7,6,0,0,225,16,1,0,0,0,226,227,5,167,0,0,227,18,1,0,0,0,
	228,229,5,8364,0,0,229,20,1,0,0,0,230,231,5,94,0,0,231,22,1,0,0,0,232,233,
	5,62,0,0,233,24,1,0,0,0,234,235,5,60,0,0,235,26,1,0,0,0,236,237,5,61,0,
	0,237,28,1,0,0,0,238,239,5,35,0,0,239,30,1,0,0,0,240,241,5,44,0,0,241,32,
	1,0,0,0,242,243,5,58,0,0,243,34,1,0,0,0,244,245,5,91,0,0,245,36,1,0,0,0,
	246,247,5,93,0,0,247,38,1,0,0,0,248,249,5,123,0,0,249,40,1,0,0,0,250,251,
	5,125,0,0,251,42,1,0,0,0,252,253,5,43,0,0,253,44,1,0,0,0,254,255,5,36,0,
	0,255,46,1,0,0,0,256,257,5,37,0,0,257,48,1,0,0,0,258,259,5,64,0,0,259,50,
	1,0,0,0,260,261,7,7,0,0,261,262,7,8,0,0,262,263,7,9,0,0,263,264,7,10,0,
	0,264,271,7,5,0,0,265,266,7,11,0,0,266,267,7,7,0,0,267,271,7,7,0,0,268,
	269,7,2,0,0,269,271,7,11,0,0,270,260,1,0,0,0,270,265,1,0,0,0,270,268,1,
	0,0,0,271,52,1,0,0,0,272,273,7,12,0,0,273,274,7,13,0,0,274,275,7,14,0,0,
	275,282,7,5,0,0,276,277,7,11,0,0,277,282,7,2,0,0,278,279,7,0,0,0,279,280,
	7,5,0,0,280,282,7,10,0,0,281,272,1,0,0,0,281,276,1,0,0,0,281,278,1,0,0,
	0,282,54,1,0,0,0,283,284,7,2,0,0,284,285,7,14,0,0,285,286,7,9,0,0,286,287,
	7,9,0,0,287,56,1,0,0,0,288,289,5,123,0,0,289,290,5,125,0,0,290,58,1,0,0,
	0,291,292,5,91,0,0,292,293,5,93,0,0,293,60,1,0,0,0,294,295,5,35,0,0,295,
	296,5,33,0,0,296,300,1,0,0,0,297,299,8,15,0,0,298,297,1,0,0,0,299,302,1,
	0,0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,303,1,0,0,0,302,300,1,0,0,0,303,
	304,3,117,58,0,304,62,1,0,0,0,305,307,3,115,57,0,306,305,1,0,0,0,306,307,
	1,0,0,0,307,308,1,0,0,0,308,315,3,89,44,0,309,311,5,46,0,0,310,312,3,101,
	50,0,311,310,1,0,0,0,312,313,1,0,0,0,313,311,1,0,0,0,313,314,1,0,0,0,314,
	316,1,0,0,0,315,309,1,0,0,0,315,316,1,0,0,0,316,318,1,0,0,0,317,319,3,113,
	56,0,318,317,1,0,0,0,318,319,1,0,0,0,319,342,1,0,0,0,320,322,3,115,57,0,
	321,320,1,0,0,0,321,322,1,0,0,0,322,323,1,0,0,0,323,325,5,46,0,0,324,326,
	3,101,50,0,325,324,1,0,0,0,326,327,1,0,0,0,327,325,1,0,0,0,327,328,1,0,
	0,0,328,330,1,0,0,0,329,331,3,113,56,0,330,329,1,0,0,0,330,331,1,0,0,0,
	331,342,1,0,0,0,332,334,3,115,57,0,333,332,1,0,0,0,333,334,1,0,0,0,334,
	339,1,0,0,0,335,340,3,93,46,0,336,340,3,95,47,0,337,340,3,97,48,0,338,340,
	3,99,49,0,339,335,1,0,0,0,339,336,1,0,0,0,339,337,1,0,0,0,339,338,1,0,0,
	0,340,342,1,0,0,0,341,306,1,0,0,0,341,321,1,0,0,0,341,333,1,0,0,0,342,64,
	1,0,0,0,343,344,3,67,33,0,344,66,1,0,0,0,345,349,7,16,0,0,346,348,7,17,
	0,0,347,346,1,0,0,0,348,351,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,
	355,1,0,0,0,351,349,1,0,0,0,352,355,3,69,34,0,353,355,3,133,66,0,354,345,
	1,0,0,0,354,352,1,0,0,0,354,353,1,0,0,0,355,68,1,0,0,0,356,360,5,96,0,0,
	357,359,8,18,0,0,358,357,1,0,0,0,359,362,1,0,0,0,360,358,1,0,0,0,360,361,
	1,0,0,0,361,363,1,0,0,0,362,360,1,0,0,0,363,364,5,96,0,0,364,70,1,0,0,0,
	365,368,3,73,36,0,366,368,3,75,37,0,367,365,1,0,0,0,367,366,1,0,0,0,368,
	72,1,0,0,0,369,371,7,19,0,0,370,369,1,0,0,0,370,371,1,0,0,0,371,372,1,0,
	0,0,372,373,5,34,0,0,373,374,5,34,0,0,374,375,5,34,0,0,375,379,1,0,0,0,
	376,378,9,0,0,0,377,376,1,0,0,0,378,381,1,0,0,0,379,380,1,0,0,0,379,377,
	1,0,0,0,380,382,1,0,0,0,381,379,1,0,0,0,382,383,5,34,0,0,383,384,5,34,0,
	0,384,385,5,34,0,0,385,74,1,0,0,0,386,389,3,77,38,0,387,389,3,79,39,0,388,
	386,1,0,0,0,388,387,1,0,0,0,389,76,1,0,0,0,390,392,7,19,0,0,391,390,1,0,
	0,0,391,392,1,0,0,0,392,393,1,0,0,0,393,399,5,39,0,0,394,395,5,92,0,0,395,
	398,5,39,0,0,396,398,8,20,0,0,397,394,1,0,0,0,397,396,1,0,0,0,398,401,1,
	0,0,0,399,397,1,0,0,0,399,400,1,0,0,0,400,402,1,0,0,0,401,399,1,0,0,0,402,
	417,5,39,0,0,403,405,7,19,0,0,404,403,1,0,0,0,404,405,1,0,0,0,405,406,1,
	0,0,0,406,412,5,34,0,0,407,408,5,92,0,0,408,411,5,34,0,0,409,411,8,21,0,
	0,410,407,1,0,0,0,410,409,1,0,0,0,411,414,1,0,0,0,412,410,1,0,0,0,412,413,
	1,0,0,0,413,415,1,0,0,0,414,412,1,0,0,0,415,417,5,34,0,0,416,391,1,0,0,
	0,416,404,1,0,0,0,417,78,1,0,0,0,418,419,7,22,0,0,419,423,5,39,0,0,420,
	422,8,23,0,0,421,420,1,0,0,0,422,425,1,0,0,0,423,421,1,0,0,0,423,424,1,
	0,0,0,424,426,1,0,0,0,425,423,1,0,0,0,426,437,5,39,0,0,427,428,7,22,0,0,
	428,432,5,34,0,0,429,431,8,24,0,0,430,429,1,0,0,0,431,434,1,0,0,0,432,430,
	1,0,0,0,432,433,1,0,0,0,433,435,1,0,0,0,434,432,1,0,0,0,435,437,5,34,0,
	0,436,418,1,0,0,0,436,427,1,0,0,0,437,80,1,0,0,0,438,439,5,92,0,0,439,442,
	7,25,0,0,440,442,3,83,41,0,441,438,1,0,0,0,441,440,1,0,0,0,442,82,1,0,0,
	0,443,447,5,92,0,0,444,448,7,26,0,0,445,448,3,85,42,0,446,448,3,87,43,0,
	447,444,1,0,0,0,447,445,1,0,0,0,447,446,1,0,0,0,448,84,1,0,0,0,449,450,
	5,117,0,0,450,451,3,109,54,0,451,452,3,109,54,0,452,453,3,109,54,0,453,
	454,3,109,54,0,454,86,1,0,0,0,455,456,5,85,0,0,456,457,3,109,54,0,457,458,
	3,109,54,0,458,459,3,109,54,0,459,460,3,109,54,0,460,461,3,109,54,0,461,
	462,3,109,54,0,462,463,3,109,54,0,463,464,3,109,54,0,464,88,1,0,0,0,465,
	466,3,91,45,0,466,90,1,0,0,0,467,479,5,48,0,0,468,470,3,115,57,0,469,468,
	1,0,0,0,469,470,1,0,0,0,470,471,1,0,0,0,471,475,7,4,0,0,472,474,3,101,50,
	0,473,472,1,0,0,0,474,477,1,0,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,479,
	1,0,0,0,477,475,1,0,0,0,478,467,1,0,0,0,478,469,1,0,0,0,479,92,1,0,0,0,
	480,481,5,48,0,0,481,483,7,27,0,0,482,484,3,103,51,0,483,482,1,0,0,0,484,
	485,1,0,0,0,485,483,1,0,0,0,485,486,1,0,0,0,486,494,1,0,0,0,487,489,5,37,
	0,0,488,490,3,103,51,0,489,488,1,0,0,0,490,491,1,0,0,0,491,489,1,0,0,0,
	491,492,1,0,0,0,492,494,1,0,0,0,493,480,1,0,0,0,493,487,1,0,0,0,494,94,
	1,0,0,0,495,496,5,48,0,0,496,498,7,11,0,0,497,499,3,105,52,0,498,497,1,
	0,0,0,499,500,1,0,0,0,500,498,1,0,0,0,500,501,1,0,0,0,501,96,1,0,0,0,502,
	503,5,48,0,0,503,505,7,28,0,0,504,506,3,107,53,0,505,504,1,0,0,0,506,507,
	1,0,0,0,507,505,1,0,0,0,507,508,1,0,0,0,508,98,1,0,0,0,509,510,5,48,0,0,
	510,512,7,29,0,0,511,513,3,109,54,0,512,511,1,0,0,0,513,514,1,0,0,0,514,
	512,1,0,0,0,514,515,1,0,0,0,515,523,1,0,0,0,516,518,5,35,0,0,517,519,3,
	109,54,0,518,517,1,0,0,0,519,520,1,0,0,0,520,518,1,0,0,0,520,521,1,0,0,
	0,521,523,1,0,0,0,522,509,1,0,0,0,522,516,1,0,0,0,523,100,1,0,0,0,524,525,
	7,30,0,0,525,102,1,0,0,0,526,527,2,48,49,0,527,104,1,0,0,0,528,529,7,31,
	0,0,529,106,1,0,0,0,530,533,3,101,50,0,531,533,7,32,0,0,532,530,1,0,0,0,
	532,531,1,0,0,0,533,108,1,0,0,0,534,537,3,101,50,0,535,537,7,33,0,0,536,
	534,1,0,0,0,536,535,1,0,0,0,537,110,1,0,0,0,538,540,5,46,0,0,539,541,3,
	101,50,0,540,539,1,0,0,0,541,542,1,0,0,0,542,540,1,0,0,0,542,543,1,0,0,
	0,543,112,1,0,0,0,544,546,7,5,0,0,545,547,3,115,57,0,546,545,1,0,0,0,546,
	547,1,0,0,0,547,549,1,0,0,0,548,550,3,101,50,0,549,548,1,0,0,0,550,551,
	1,0,0,0,551,549,1,0,0,0,551,552,1,0,0,0,552,114,1,0,0,0,553,554,7,34,0,
	0,554,116,1,0,0,0,555,557,3,121,60,0,556,555,1,0,0,0,557,560,1,0,0,0,558,
	556,1,0,0,0,558,559,1,0,0,0,559,564,1,0,0,0,560,558,1,0,0,0,561,563,3,125,
	62,0,562,561,1,0,0,0,563,566,1,0,0,0,564,562,1,0,0,0,564,565,1,0,0,0,565,
	567,1,0,0,0,566,564,1,0,0,0,567,571,3,119,59,0,568,570,3,125,62,0,569,568,
	1,0,0,0,570,573,1,0,0,0,571,569,1,0,0,0,571,572,1,0,0,0,572,118,1,0,0,0,
	573,571,1,0,0,0,574,576,5,13,0,0,575,577,5,10,0,0,576,575,1,0,0,0,576,577,
	1,0,0,0,577,580,1,0,0,0,578,580,5,10,0,0,579,574,1,0,0,0,579,578,1,0,0,
	0,580,120,1,0,0,0,581,583,7,3,0,0,582,581,1,0,0,0,583,584,1,0,0,0,584,582,
	1,0,0,0,584,585,1,0,0,0,585,586,1,0,0,0,586,587,6,60,0,0,587,122,1,0,0,
	0,588,589,5,47,0,0,589,590,5,42,0,0,590,594,1,0,0,0,591,593,9,0,0,0,592,
	591,1,0,0,0,593,596,1,0,0,0,594,595,1,0,0,0,594,592,1,0,0,0,595,597,1,0,
	0,0,596,594,1,0,0,0,597,598,5,42,0,0,598,599,5,47,0,0,599,600,1,0,0,0,600,
	601,6,61,0,0,601,124,1,0,0,0,602,606,3,129,64,0,603,606,3,131,65,0,604,
	606,3,123,61,0,605,602,1,0,0,0,605,603,1,0,0,0,605,604,1,0,0,0,606,126,
	1,0,0,0,607,608,5,45,0,0,608,609,5,45,0,0,609,128,1,0,0,0,610,614,4,64,
	0,0,611,613,7,3,0,0,612,611,1,0,0,0,613,616,1,0,0,0,614,612,1,0,0,0,614,
	615,1,0,0,0,615,619,1,0,0,0,616,614,1,0,0,0,617,620,3,127,63,0,618,620,
	5,59,0,0,619,617,1,0,0,0,619,618,1,0,0,0,620,624,1,0,0,0,621,623,8,35,0,
	0,622,621,1,0,0,0,623,626,1,0,0,0,624,622,1,0,0,0,624,625,1,0,0,0,625,627,
	1,0,0,0,626,624,1,0,0,0,627,628,6,64,0,0,628,130,1,0,0,0,629,630,5,47,0,
	0,630,638,5,47,0,0,631,633,5,35,0,0,632,634,7,3,0,0,633,632,1,0,0,0,634,
	635,1,0,0,0,635,633,1,0,0,0,635,636,1,0,0,0,636,638,1,0,0,0,637,629,1,0,
	0,0,637,631,1,0,0,0,638,642,1,0,0,0,639,641,8,35,0,0,640,639,1,0,0,0,641,
	644,1,0,0,0,642,640,1,0,0,0,642,643,1,0,0,0,643,645,1,0,0,0,644,642,1,0,
	0,0,645,646,6,65,0,0,646,132,1,0,0,0,647,651,7,30,0,0,648,650,7,36,0,0,
	649,648,1,0,0,0,650,653,1,0,0,0,651,649,1,0,0,0,651,652,1,0,0,0,652,134,
	1,0,0,0,653,651,1,0,0,0,654,655,8,37,0,0,655,136,1,0,0,0,656,660,3,135,
	67,0,657,659,3,135,67,0,658,657,1,0,0,0,659,662,1,0,0,0,660,658,1,0,0,0,
	660,661,1,0,0,0,661,138,1,0,0,0,662,660,1,0,0,0,79,0,153,159,166,171,176,
	181,186,191,193,199,205,212,214,219,270,281,300,306,313,315,318,321,327,
	330,333,339,341,349,354,360,367,370,379,388,391,397,399,404,410,412,416,
	423,432,436,441,447,469,475,478,485,491,493,500,507,514,520,522,532,536,
	542,546,551,558,564,571,576,579,584,594,605,614,619,624,635,637,642,651,
	660,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!YiniLexer.__ATN) {
			YiniLexer.__ATN = new ATNDeserializer().deserialize(YiniLexer._serializedATN);
		}

		return YiniLexer.__ATN;
	}


	static DecisionsToDFA = YiniLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}