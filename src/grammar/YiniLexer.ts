// Generated from grammar/v1.0.0-rc.2x/YiniLexer.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class YiniLexer extends Lexer {
	public static readonly YINI_MARKER = 1;
	public static readonly SECTION_HEAD = 2;
	public static readonly TERMINAL_TOKEN = 3;
	public static readonly SS = 4;
	public static readonly EUR = 5;
	public static readonly CARET = 6;
	public static readonly GT = 7;
	public static readonly LT = 8;
	public static readonly EQ = 9;
	public static readonly HASH = 10;
	public static readonly COMMA = 11;
	public static readonly COLON = 12;
	public static readonly OB = 13;
	public static readonly CB = 14;
	public static readonly OC = 15;
	public static readonly CC = 16;
	public static readonly PLUS = 17;
	public static readonly DOLLAR = 18;
	public static readonly PC = 19;
	public static readonly AT = 20;
	public static readonly SEMICOLON = 21;
	public static readonly BOOLEAN_FALSE = 22;
	public static readonly BOOLEAN_TRUE = 23;
	public static readonly NULL = 24;
	public static readonly EMPTY_OBJECT = 25;
	public static readonly EMPTY_LIST = 26;
	public static readonly SHEBANG = 27;
	public static readonly NUMBER = 28;
	public static readonly KEY = 29;
	public static readonly IDENT = 30;
	public static readonly IDENT_BACKTICKED = 31;
	public static readonly STRING = 32;
	public static readonly TRIPLE_QUOTED_STRING = 33;
	public static readonly SINGLE_OR_DOUBLE = 34;
	public static readonly R_AND_C_STRING = 35;
	public static readonly HYPER_STRING = 36;
	public static readonly ESC_SEQ = 37;
	public static readonly ESC_SEQ_BASE = 38;
	public static readonly NL = 39;
	public static readonly SINGLE_NL = 40;
	public static readonly WS = 41;
	public static readonly BLOCK_COMMENT = 42;
	public static readonly COMMENT = 43;
	public static readonly LINE_COMMENT = 44;
	public static readonly INLINE_COMMENT = 45;
	public static readonly IDENT_INVALID = 46;
	public static readonly REST = 47;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            "'\\u00A7'", 
                                                            "'\\u20AC'", 
                                                            "'^'", "'>'", 
                                                            "'<'", "'='", 
                                                            "'#'", "','", 
                                                            "':'", "'['", 
                                                            "']'", "'{'", 
                                                            "'}'", "'+'", 
                                                            "'$'", "'%'", 
                                                            "'@'", "';'", 
                                                            null, null, 
                                                            null, "'{}'", 
                                                            "'[]'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "YINI_MARKER", 
                                                             "SECTION_HEAD", 
                                                             "TERMINAL_TOKEN", 
                                                             "SS", "EUR", 
                                                             "CARET", "GT", 
                                                             "LT", "EQ", 
                                                             "HASH", "COMMA", 
                                                             "COLON", "OB", 
                                                             "CB", "OC", 
                                                             "CC", "PLUS", 
                                                             "DOLLAR", "PC", 
                                                             "AT", "SEMICOLON", 
                                                             "BOOLEAN_FALSE", 
                                                             "BOOLEAN_TRUE", 
                                                             "NULL", "EMPTY_OBJECT", 
                                                             "EMPTY_LIST", 
                                                             "SHEBANG", 
                                                             "NUMBER", "KEY", 
                                                             "IDENT", "IDENT_BACKTICKED", 
                                                             "STRING", "TRIPLE_QUOTED_STRING", 
                                                             "SINGLE_OR_DOUBLE", 
                                                             "R_AND_C_STRING", 
                                                             "HYPER_STRING", 
                                                             "ESC_SEQ", 
                                                             "ESC_SEQ_BASE", 
                                                             "NL", "SINGLE_NL", 
                                                             "WS", "BLOCK_COMMENT", 
                                                             "COMMENT", 
                                                             "LINE_COMMENT", 
                                                             "INLINE_COMMENT", 
                                                             "IDENT_INVALID", 
                                                             "REST" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"YINI_MARKER", "EBD", "SECTION_HEAD", "SECTION_MARKER", "SECTION_MARKER_BASIC_REPEAT", 
		"SECTION_MARKER_SHORTHAND", "SECTION_MARKER_INVALID", "TERMINAL_TOKEN", 
		"SS", "EUR", "CARET", "GT", "LT", "EQ", "HASH", "COMMA", "COLON", "OB", 
		"CB", "OC", "CC", "PLUS", "DOLLAR", "PC", "AT", "SEMICOLON", "BOOLEAN_FALSE", 
		"BOOLEAN_TRUE", "NULL", "EMPTY_OBJECT", "EMPTY_LIST", "SHEBANG", "NUMBER", 
		"KEY", "IDENT", "IDENT_BACKTICKED", "STRING", "TRIPLE_QUOTED_STRING", 
		"SINGLE_OR_DOUBLE", "R_AND_C_STRING", "HYPER_STRING", "ESC_SEQ", "ESC_SEQ_BASE", 
		"UNICODE16", "UNICODE32", "INTEGER", "DECIMAL_INTEGER", "BIN_INTEGER", 
		"OCT_INTEGER", "DUO_INTEGER", "HEX_INTEGER", "DIGIT", "BIN_DIGIT", "OCT_DIGIT", 
		"DUO_DIGIT", "HEX_DIGIT", "FRACTION", "EXPONENT", "SIGN", "NL", "SINGLE_NL", 
		"WS", "BLOCK_COMMENT", "COMMENT", "LINE_COMMENT", "INLINE_COMMENT", "DISABLE_LINE", 
		"IDENT_INVALID", "REST_CHAR", "REST",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, YiniLexer._ATN, YiniLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "YiniLexer.g4"; }

	public get literalNames(): (string | null)[] { return YiniLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return YiniLexer.symbolicNames; }
	public get ruleNames(): string[] { return YiniLexer.ruleNames; }

	public get serializedATN(): number[] { return YiniLexer._serializedATN; }

	public get channelNames(): string[] { return YiniLexer.channelNames; }

	public get modeNames(): string[] { return YiniLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,47,672,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,5,
	2,153,8,2,10,2,12,2,156,9,2,1,2,1,2,5,2,160,8,2,10,2,12,2,163,9,2,1,2,5,
	2,166,8,2,10,2,12,2,169,9,2,1,2,1,2,4,2,173,8,2,11,2,12,2,174,1,3,1,3,1,
	3,3,3,180,8,3,1,4,4,4,183,8,4,11,4,12,4,184,1,4,4,4,188,8,4,11,4,12,4,189,
	1,4,4,4,193,8,4,11,4,12,4,194,1,4,4,4,198,8,4,11,4,12,4,199,3,4,202,8,4,
	1,5,1,5,1,5,1,5,3,5,208,8,5,1,5,1,5,5,5,212,8,5,10,5,12,5,215,9,5,1,6,1,
	6,1,6,1,6,4,6,221,8,6,11,6,12,6,222,1,6,4,6,226,8,6,11,6,12,6,227,1,7,1,
	7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,
	14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,
	1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,
	26,1,26,1,26,1,26,1,26,3,26,281,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
	1,27,1,27,3,27,292,8,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,
	30,1,30,1,31,1,31,1,31,1,31,5,31,309,8,31,10,31,12,31,312,9,31,1,31,1,31,
	1,32,3,32,317,8,32,1,32,1,32,1,32,4,32,322,8,32,11,32,12,32,323,3,32,326,
	8,32,1,32,3,32,329,8,32,1,32,3,32,332,8,32,1,32,1,32,4,32,336,8,32,11,32,
	12,32,337,1,32,3,32,341,8,32,1,32,3,32,344,8,32,1,32,1,32,1,32,1,32,3,32,
	350,8,32,3,32,352,8,32,1,33,1,33,1,34,1,34,5,34,358,8,34,10,34,12,34,361,
	9,34,1,34,1,34,3,34,365,8,34,1,35,1,35,5,35,369,8,35,10,35,12,35,372,9,
	35,1,35,1,35,1,36,1,36,3,36,378,8,36,1,37,3,37,381,8,37,1,37,1,37,1,37,
	1,37,1,37,5,37,388,8,37,10,37,12,37,391,9,37,1,37,1,37,1,37,1,37,1,38,1,
	38,3,38,399,8,38,1,39,3,39,402,8,39,1,39,1,39,1,39,1,39,5,39,408,8,39,10,
	39,12,39,411,9,39,1,39,1,39,3,39,415,8,39,1,39,1,39,1,39,1,39,5,39,421,
	8,39,10,39,12,39,424,9,39,1,39,3,39,427,8,39,1,40,1,40,1,40,5,40,432,8,
	40,10,40,12,40,435,9,40,1,40,1,40,1,40,1,40,5,40,441,8,40,10,40,12,40,444,
	9,40,1,40,3,40,447,8,40,1,41,1,41,1,41,3,41,452,8,41,1,42,1,42,1,42,1,42,
	3,42,458,8,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,
	44,1,44,1,44,1,44,1,44,1,45,1,45,1,46,1,46,3,46,480,8,46,1,46,1,46,5,46,
	484,8,46,10,46,12,46,487,9,46,3,46,489,8,46,1,47,1,47,1,47,4,47,494,8,47,
	11,47,12,47,495,1,47,1,47,4,47,500,8,47,11,47,12,47,501,3,47,504,8,47,1,
	48,1,48,1,48,4,48,509,8,48,11,48,12,48,510,1,49,1,49,1,49,4,49,516,8,49,
	11,49,12,49,517,1,50,1,50,1,50,4,50,523,8,50,11,50,12,50,524,1,50,1,50,
	4,50,529,8,50,11,50,12,50,530,3,50,533,8,50,1,51,1,51,1,52,1,52,1,53,1,
	53,1,54,1,54,3,54,543,8,54,1,55,1,55,3,55,547,8,55,1,56,1,56,4,56,551,8,
	56,11,56,12,56,552,1,57,1,57,3,57,557,8,57,1,57,4,57,560,8,57,11,57,12,
	57,561,1,58,1,58,1,59,5,59,567,8,59,10,59,12,59,570,9,59,1,59,5,59,573,
	8,59,10,59,12,59,576,9,59,1,59,1,59,5,59,580,8,59,10,59,12,59,583,9,59,
	1,60,1,60,3,60,587,8,60,1,60,3,60,590,8,60,1,61,4,61,593,8,61,11,61,12,
	61,594,1,61,1,61,1,62,1,62,1,62,1,62,5,62,603,8,62,10,62,12,62,606,9,62,
	1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,3,63,616,8,63,1,64,1,64,3,64,620,
	8,64,1,64,5,64,623,8,64,10,64,12,64,626,9,64,1,64,1,64,1,65,1,65,1,65,1,
	65,4,65,634,8,65,11,65,12,65,635,3,65,638,8,65,1,65,5,65,641,8,65,10,65,
	12,65,644,9,65,1,65,1,65,1,66,1,66,1,66,1,66,5,66,652,8,66,10,66,12,66,
	655,9,66,1,67,1,67,5,67,659,8,67,10,67,12,67,662,9,67,1,68,1,68,1,69,1,
	69,5,69,668,8,69,10,69,12,69,671,9,69,2,389,604,0,70,1,1,3,0,5,2,7,0,9,
	0,11,0,13,0,15,3,17,4,19,5,21,6,23,7,25,8,27,9,29,10,31,11,33,12,35,13,
	37,14,39,15,41,16,43,17,45,18,47,19,49,20,51,21,53,22,55,23,57,24,59,25,
	61,26,63,27,65,28,67,29,69,30,71,31,73,32,75,33,77,34,79,35,81,36,83,37,
	85,38,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,0,105,0,107,0,109,0,
	111,0,113,0,115,0,117,0,119,39,121,40,123,41,125,42,127,43,129,44,131,45,
	133,0,135,46,137,0,139,47,1,0,38,2,0,89,89,121,121,2,0,73,73,105,105,2,
	0,78,78,110,110,2,0,9,9,32,32,1,0,49,57,2,0,69,69,101,101,2,0,68,68,100,
	100,2,0,70,70,102,102,2,0,65,65,97,97,2,0,76,76,108,108,2,0,83,83,115,115,
	2,0,79,79,111,111,2,0,84,84,116,116,2,0,82,82,114,114,2,0,85,85,117,117,
	2,0,8,10,12,13,3,0,65,90,95,95,97,122,5,0,46,46,48,57,65,90,95,95,97,122,
	2,0,0,31,96,96,4,0,67,67,82,82,99,99,114,114,3,0,10,10,13,13,39,39,3,0,
	10,10,13,13,34,34,2,0,72,72,104,104,1,0,39,39,1,0,34,34,2,0,34,34,39,39,
	9,0,48,48,63,63,92,92,97,98,102,102,110,110,114,114,116,116,118,118,2,0,
	66,66,98,98,2,0,90,90,122,122,2,0,88,88,120,120,1,0,48,57,1,0,48,55,4,0,
	69,69,88,88,101,101,120,120,2,0,65,70,97,102,2,0,43,43,45,45,2,0,10,10,
	13,13,4,0,48,57,65,90,95,95,97,122,13,0,9,10,13,13,32,32,34,34,39,39,44,
	45,47,58,61,61,91,91,93,93,96,96,123,123,125,125,742,0,1,1,0,0,0,0,5,1,
	0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
	0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
	0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,
	0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,
	0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,
	0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
	0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,
	0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,
	0,135,1,0,0,0,0,139,1,0,0,0,1,141,1,0,0,0,3,147,1,0,0,0,5,154,1,0,0,0,7,
	179,1,0,0,0,9,201,1,0,0,0,11,207,1,0,0,0,13,220,1,0,0,0,15,229,1,0,0,0,
	17,234,1,0,0,0,19,236,1,0,0,0,21,238,1,0,0,0,23,240,1,0,0,0,25,242,1,0,
	0,0,27,244,1,0,0,0,29,246,1,0,0,0,31,248,1,0,0,0,33,250,1,0,0,0,35,252,
	1,0,0,0,37,254,1,0,0,0,39,256,1,0,0,0,41,258,1,0,0,0,43,260,1,0,0,0,45,
	262,1,0,0,0,47,264,1,0,0,0,49,266,1,0,0,0,51,268,1,0,0,0,53,280,1,0,0,0,
	55,291,1,0,0,0,57,293,1,0,0,0,59,298,1,0,0,0,61,301,1,0,0,0,63,304,1,0,
	0,0,65,351,1,0,0,0,67,353,1,0,0,0,69,364,1,0,0,0,71,366,1,0,0,0,73,377,
	1,0,0,0,75,380,1,0,0,0,77,398,1,0,0,0,79,426,1,0,0,0,81,446,1,0,0,0,83,
	451,1,0,0,0,85,453,1,0,0,0,87,459,1,0,0,0,89,465,1,0,0,0,91,475,1,0,0,0,
	93,488,1,0,0,0,95,503,1,0,0,0,97,505,1,0,0,0,99,512,1,0,0,0,101,532,1,0,
	0,0,103,534,1,0,0,0,105,536,1,0,0,0,107,538,1,0,0,0,109,542,1,0,0,0,111,
	546,1,0,0,0,113,548,1,0,0,0,115,554,1,0,0,0,117,563,1,0,0,0,119,568,1,0,
	0,0,121,589,1,0,0,0,123,592,1,0,0,0,125,598,1,0,0,0,127,615,1,0,0,0,129,
	619,1,0,0,0,131,637,1,0,0,0,133,647,1,0,0,0,135,656,1,0,0,0,137,663,1,0,
	0,0,139,665,1,0,0,0,141,142,5,64,0,0,142,143,7,0,0,0,143,144,7,1,0,0,144,
	145,7,2,0,0,145,146,7,1,0,0,146,2,1,0,0,0,147,148,2,48,49,0,148,149,2,48,
	49,0,149,150,2,48,49,0,150,4,1,0,0,0,151,153,7,3,0,0,152,151,1,0,0,0,153,
	156,1,0,0,0,154,152,1,0,0,0,154,155,1,0,0,0,155,157,1,0,0,0,156,154,1,0,
	0,0,157,161,3,7,3,0,158,160,7,3,0,0,159,158,1,0,0,0,160,163,1,0,0,0,161,
	159,1,0,0,0,161,162,1,0,0,0,162,167,1,0,0,0,163,161,1,0,0,0,164,166,3,123,
	61,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,1,0,0,0,167,168,1,0,0,0,168,
	170,1,0,0,0,169,167,1,0,0,0,170,172,3,69,34,0,171,173,3,119,59,0,172,171,
	1,0,0,0,173,174,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,6,1,0,0,0,176,
	180,3,9,4,0,177,180,3,11,5,0,178,180,3,13,6,0,179,176,1,0,0,0,179,177,1,
	0,0,0,179,178,1,0,0,0,180,8,1,0,0,0,181,183,3,21,10,0,182,181,1,0,0,0,183,
	184,1,0,0,0,184,182,1,0,0,0,184,185,1,0,0,0,185,202,1,0,0,0,186,188,3,25,
	12,0,187,186,1,0,0,0,188,189,1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,
	202,1,0,0,0,191,193,3,17,8,0,192,191,1,0,0,0,193,194,1,0,0,0,194,192,1,
	0,0,0,194,195,1,0,0,0,195,202,1,0,0,0,196,198,3,19,9,0,197,196,1,0,0,0,
	198,199,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,202,1,0,0,0,201,182,
	1,0,0,0,201,187,1,0,0,0,201,192,1,0,0,0,201,197,1,0,0,0,202,10,1,0,0,0,
	203,208,3,21,10,0,204,208,3,25,12,0,205,208,3,17,8,0,206,208,3,19,9,0,207,
	203,1,0,0,0,207,204,1,0,0,0,207,205,1,0,0,0,207,206,1,0,0,0,208,209,1,0,
	0,0,209,213,7,4,0,0,210,212,3,103,51,0,211,210,1,0,0,0,212,215,1,0,0,0,
	213,211,1,0,0,0,213,214,1,0,0,0,214,12,1,0,0,0,215,213,1,0,0,0,216,221,
	3,21,10,0,217,221,3,25,12,0,218,221,3,17,8,0,219,221,3,19,9,0,220,216,1,
	0,0,0,220,217,1,0,0,0,220,218,1,0,0,0,220,219,1,0,0,0,221,222,1,0,0,0,222,
	220,1,0,0,0,222,223,1,0,0,0,223,225,1,0,0,0,224,226,3,103,51,0,225,224,
	1,0,0,0,226,227,1,0,0,0,227,225,1,0,0,0,227,228,1,0,0,0,228,14,1,0,0,0,
	229,230,5,47,0,0,230,231,7,5,0,0,231,232,7,2,0,0,232,233,7,6,0,0,233,16,
	1,0,0,0,234,235,5,167,0,0,235,18,1,0,0,0,236,237,5,8364,0,0,237,20,1,0,
	0,0,238,239,5,94,0,0,239,22,1,0,0,0,240,241,5,62,0,0,241,24,1,0,0,0,242,
	243,5,60,0,0,243,26,1,0,0,0,244,245,5,61,0,0,245,28,1,0,0,0,246,247,5,35,
	0,0,247,30,1,0,0,0,248,249,5,44,0,0,249,32,1,0,0,0,250,251,5,58,0,0,251,
	34,1,0,0,0,252,253,5,91,0,0,253,36,1,0,0,0,254,255,5,93,0,0,255,38,1,0,
	0,0,256,257,5,123,0,0,257,40,1,0,0,0,258,259,5,125,0,0,259,42,1,0,0,0,260,
	261,5,43,0,0,261,44,1,0,0,0,262,263,5,36,0,0,263,46,1,0,0,0,264,265,5,37,
	0,0,265,48,1,0,0,0,266,267,5,64,0,0,267,50,1,0,0,0,268,269,5,59,0,0,269,
	52,1,0,0,0,270,271,7,7,0,0,271,272,7,8,0,0,272,273,7,9,0,0,273,274,7,10,
	0,0,274,281,7,5,0,0,275,276,7,11,0,0,276,277,7,7,0,0,277,281,7,7,0,0,278,
	279,7,2,0,0,279,281,7,11,0,0,280,270,1,0,0,0,280,275,1,0,0,0,280,278,1,
	0,0,0,281,54,1,0,0,0,282,283,7,12,0,0,283,284,7,13,0,0,284,285,7,14,0,0,
	285,292,7,5,0,0,286,287,7,11,0,0,287,292,7,2,0,0,288,289,7,0,0,0,289,290,
	7,5,0,0,290,292,7,10,0,0,291,282,1,0,0,0,291,286,1,0,0,0,291,288,1,0,0,
	0,292,56,1,0,0,0,293,294,7,2,0,0,294,295,7,14,0,0,295,296,7,9,0,0,296,297,
	7,9,0,0,297,58,1,0,0,0,298,299,5,123,0,0,299,300,5,125,0,0,300,60,1,0,0,
	0,301,302,5,91,0,0,302,303,5,93,0,0,303,62,1,0,0,0,304,305,5,35,0,0,305,
	306,5,33,0,0,306,310,1,0,0,0,307,309,8,15,0,0,308,307,1,0,0,0,309,312,1,
	0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,313,1,0,0,0,312,310,1,0,0,0,313,
	314,3,119,59,0,314,64,1,0,0,0,315,317,3,117,58,0,316,315,1,0,0,0,316,317,
	1,0,0,0,317,318,1,0,0,0,318,325,3,91,45,0,319,321,5,46,0,0,320,322,3,103,
	51,0,321,320,1,0,0,0,322,323,1,0,0,0,323,321,1,0,0,0,323,324,1,0,0,0,324,
	326,1,0,0,0,325,319,1,0,0,0,325,326,1,0,0,0,326,328,1,0,0,0,327,329,3,115,
	57,0,328,327,1,0,0,0,328,329,1,0,0,0,329,352,1,0,0,0,330,332,3,117,58,0,
	331,330,1,0,0,0,331,332,1,0,0,0,332,333,1,0,0,0,333,335,5,46,0,0,334,336,
	3,103,51,0,335,334,1,0,0,0,336,337,1,0,0,0,337,335,1,0,0,0,337,338,1,0,
	0,0,338,340,1,0,0,0,339,341,3,115,57,0,340,339,1,0,0,0,340,341,1,0,0,0,
	341,352,1,0,0,0,342,344,3,117,58,0,343,342,1,0,0,0,343,344,1,0,0,0,344,
	349,1,0,0,0,345,350,3,95,47,0,346,350,3,97,48,0,347,350,3,99,49,0,348,350,
	3,101,50,0,349,345,1,0,0,0,349,346,1,0,0,0,349,347,1,0,0,0,349,348,1,0,
	0,0,350,352,1,0,0,0,351,316,1,0,0,0,351,331,1,0,0,0,351,343,1,0,0,0,352,
	66,1,0,0,0,353,354,3,69,34,0,354,68,1,0,0,0,355,359,7,16,0,0,356,358,7,
	17,0,0,357,356,1,0,0,0,358,361,1,0,0,0,359,357,1,0,0,0,359,360,1,0,0,0,
	360,365,1,0,0,0,361,359,1,0,0,0,362,365,3,71,35,0,363,365,3,135,67,0,364,
	355,1,0,0,0,364,362,1,0,0,0,364,363,1,0,0,0,365,70,1,0,0,0,366,370,5,96,
	0,0,367,369,8,18,0,0,368,367,1,0,0,0,369,372,1,0,0,0,370,368,1,0,0,0,370,
	371,1,0,0,0,371,373,1,0,0,0,372,370,1,0,0,0,373,374,5,96,0,0,374,72,1,0,
	0,0,375,378,3,75,37,0,376,378,3,77,38,0,377,375,1,0,0,0,377,376,1,0,0,0,
	378,74,1,0,0,0,379,381,7,19,0,0,380,379,1,0,0,0,380,381,1,0,0,0,381,382,
	1,0,0,0,382,383,5,34,0,0,383,384,5,34,0,0,384,385,5,34,0,0,385,389,1,0,
	0,0,386,388,9,0,0,0,387,386,1,0,0,0,388,391,1,0,0,0,389,390,1,0,0,0,389,
	387,1,0,0,0,390,392,1,0,0,0,391,389,1,0,0,0,392,393,5,34,0,0,393,394,5,
	34,0,0,394,395,5,34,0,0,395,76,1,0,0,0,396,399,3,79,39,0,397,399,3,81,40,
	0,398,396,1,0,0,0,398,397,1,0,0,0,399,78,1,0,0,0,400,402,7,19,0,0,401,400,
	1,0,0,0,401,402,1,0,0,0,402,403,1,0,0,0,403,409,5,39,0,0,404,405,5,92,0,
	0,405,408,5,39,0,0,406,408,8,20,0,0,407,404,1,0,0,0,407,406,1,0,0,0,408,
	411,1,0,0,0,409,407,1,0,0,0,409,410,1,0,0,0,410,412,1,0,0,0,411,409,1,0,
	0,0,412,427,5,39,0,0,413,415,7,19,0,0,414,413,1,0,0,0,414,415,1,0,0,0,415,
	416,1,0,0,0,416,422,5,34,0,0,417,418,5,92,0,0,418,421,5,34,0,0,419,421,
	8,21,0,0,420,417,1,0,0,0,420,419,1,0,0,0,421,424,1,0,0,0,422,420,1,0,0,
	0,422,423,1,0,0,0,423,425,1,0,0,0,424,422,1,0,0,0,425,427,5,34,0,0,426,
	401,1,0,0,0,426,414,1,0,0,0,427,80,1,0,0,0,428,429,7,22,0,0,429,433,5,39,
	0,0,430,432,8,23,0,0,431,430,1,0,0,0,432,435,1,0,0,0,433,431,1,0,0,0,433,
	434,1,0,0,0,434,436,1,0,0,0,435,433,1,0,0,0,436,447,5,39,0,0,437,438,7,
	22,0,0,438,442,5,34,0,0,439,441,8,24,0,0,440,439,1,0,0,0,441,444,1,0,0,
	0,442,440,1,0,0,0,442,443,1,0,0,0,443,445,1,0,0,0,444,442,1,0,0,0,445,447,
	5,34,0,0,446,428,1,0,0,0,446,437,1,0,0,0,447,82,1,0,0,0,448,449,5,92,0,
	0,449,452,7,25,0,0,450,452,3,85,42,0,451,448,1,0,0,0,451,450,1,0,0,0,452,
	84,1,0,0,0,453,457,5,92,0,0,454,458,7,26,0,0,455,458,3,87,43,0,456,458,
	3,89,44,0,457,454,1,0,0,0,457,455,1,0,0,0,457,456,1,0,0,0,458,86,1,0,0,
	0,459,460,5,117,0,0,460,461,3,111,55,0,461,462,3,111,55,0,462,463,3,111,
	55,0,463,464,3,111,55,0,464,88,1,0,0,0,465,466,5,85,0,0,466,467,3,111,55,
	0,467,468,3,111,55,0,468,469,3,111,55,0,469,470,3,111,55,0,470,471,3,111,
	55,0,471,472,3,111,55,0,472,473,3,111,55,0,473,474,3,111,55,0,474,90,1,
	0,0,0,475,476,3,93,46,0,476,92,1,0,0,0,477,489,5,48,0,0,478,480,3,117,58,
	0,479,478,1,0,0,0,479,480,1,0,0,0,480,481,1,0,0,0,481,485,7,4,0,0,482,484,
	3,103,51,0,483,482,1,0,0,0,484,487,1,0,0,0,485,483,1,0,0,0,485,486,1,0,
	0,0,486,489,1,0,0,0,487,485,1,0,0,0,488,477,1,0,0,0,488,479,1,0,0,0,489,
	94,1,0,0,0,490,491,5,48,0,0,491,493,7,27,0,0,492,494,3,105,52,0,493,492,
	1,0,0,0,494,495,1,0,0,0,495,493,1,0,0,0,495,496,1,0,0,0,496,504,1,0,0,0,
	497,499,5,37,0,0,498,500,3,105,52,0,499,498,1,0,0,0,500,501,1,0,0,0,501,
	499,1,0,0,0,501,502,1,0,0,0,502,504,1,0,0,0,503,490,1,0,0,0,503,497,1,0,
	0,0,504,96,1,0,0,0,505,506,5,48,0,0,506,508,7,11,0,0,507,509,3,107,53,0,
	508,507,1,0,0,0,509,510,1,0,0,0,510,508,1,0,0,0,510,511,1,0,0,0,511,98,
	1,0,0,0,512,513,5,48,0,0,513,515,7,28,0,0,514,516,3,109,54,0,515,514,1,
	0,0,0,516,517,1,0,0,0,517,515,1,0,0,0,517,518,1,0,0,0,518,100,1,0,0,0,519,
	520,5,48,0,0,520,522,7,29,0,0,521,523,3,111,55,0,522,521,1,0,0,0,523,524,
	1,0,0,0,524,522,1,0,0,0,524,525,1,0,0,0,525,533,1,0,0,0,526,528,5,35,0,
	0,527,529,3,111,55,0,528,527,1,0,0,0,529,530,1,0,0,0,530,528,1,0,0,0,530,
	531,1,0,0,0,531,533,1,0,0,0,532,519,1,0,0,0,532,526,1,0,0,0,533,102,1,0,
	0,0,534,535,7,30,0,0,535,104,1,0,0,0,536,537,2,48,49,0,537,106,1,0,0,0,
	538,539,7,31,0,0,539,108,1,0,0,0,540,543,3,103,51,0,541,543,7,32,0,0,542,
	540,1,0,0,0,542,541,1,0,0,0,543,110,1,0,0,0,544,547,3,103,51,0,545,547,
	7,33,0,0,546,544,1,0,0,0,546,545,1,0,0,0,547,112,1,0,0,0,548,550,5,46,0,
	0,549,551,3,103,51,0,550,549,1,0,0,0,551,552,1,0,0,0,552,550,1,0,0,0,552,
	553,1,0,0,0,553,114,1,0,0,0,554,556,7,5,0,0,555,557,3,117,58,0,556,555,
	1,0,0,0,556,557,1,0,0,0,557,559,1,0,0,0,558,560,3,103,51,0,559,558,1,0,
	0,0,560,561,1,0,0,0,561,559,1,0,0,0,561,562,1,0,0,0,562,116,1,0,0,0,563,
	564,7,34,0,0,564,118,1,0,0,0,565,567,3,123,61,0,566,565,1,0,0,0,567,570,
	1,0,0,0,568,566,1,0,0,0,568,569,1,0,0,0,569,574,1,0,0,0,570,568,1,0,0,0,
	571,573,3,127,63,0,572,571,1,0,0,0,573,576,1,0,0,0,574,572,1,0,0,0,574,
	575,1,0,0,0,575,577,1,0,0,0,576,574,1,0,0,0,577,581,3,121,60,0,578,580,
	3,127,63,0,579,578,1,0,0,0,580,583,1,0,0,0,581,579,1,0,0,0,581,582,1,0,
	0,0,582,120,1,0,0,0,583,581,1,0,0,0,584,586,5,13,0,0,585,587,5,10,0,0,586,
	585,1,0,0,0,586,587,1,0,0,0,587,590,1,0,0,0,588,590,5,10,0,0,589,584,1,
	0,0,0,589,588,1,0,0,0,590,122,1,0,0,0,591,593,7,3,0,0,592,591,1,0,0,0,593,
	594,1,0,0,0,594,592,1,0,0,0,594,595,1,0,0,0,595,596,1,0,0,0,596,597,6,61,
	0,0,597,124,1,0,0,0,598,599,5,47,0,0,599,600,5,42,0,0,600,604,1,0,0,0,601,
	603,9,0,0,0,602,601,1,0,0,0,603,606,1,0,0,0,604,605,1,0,0,0,604,602,1,0,
	0,0,605,607,1,0,0,0,606,604,1,0,0,0,607,608,5,42,0,0,608,609,5,47,0,0,609,
	610,1,0,0,0,610,611,6,62,0,0,611,126,1,0,0,0,612,616,3,129,64,0,613,616,
	3,131,65,0,614,616,3,125,62,0,615,612,1,0,0,0,615,613,1,0,0,0,615,614,1,
	0,0,0,616,128,1,0,0,0,617,620,3,133,66,0,618,620,5,59,0,0,619,617,1,0,0,
	0,619,618,1,0,0,0,620,624,1,0,0,0,621,623,8,35,0,0,622,621,1,0,0,0,623,
	626,1,0,0,0,624,622,1,0,0,0,624,625,1,0,0,0,625,627,1,0,0,0,626,624,1,0,
	0,0,627,628,6,64,0,0,628,130,1,0,0,0,629,630,5,47,0,0,630,638,5,47,0,0,
	631,633,5,35,0,0,632,634,7,3,0,0,633,632,1,0,0,0,634,635,1,0,0,0,635,633,
	1,0,0,0,635,636,1,0,0,0,636,638,1,0,0,0,637,629,1,0,0,0,637,631,1,0,0,0,
	638,642,1,0,0,0,639,641,8,35,0,0,640,639,1,0,0,0,641,644,1,0,0,0,642,640,
	1,0,0,0,642,643,1,0,0,0,643,645,1,0,0,0,644,642,1,0,0,0,645,646,6,65,0,
	0,646,132,1,0,0,0,647,648,5,45,0,0,648,649,5,45,0,0,649,653,1,0,0,0,650,
	652,8,35,0,0,651,650,1,0,0,0,652,655,1,0,0,0,653,651,1,0,0,0,653,654,1,
	0,0,0,654,134,1,0,0,0,655,653,1,0,0,0,656,660,7,30,0,0,657,659,7,36,0,0,
	658,657,1,0,0,0,659,662,1,0,0,0,660,658,1,0,0,0,660,661,1,0,0,0,661,136,
	1,0,0,0,662,660,1,0,0,0,663,664,8,37,0,0,664,138,1,0,0,0,665,669,3,137,
	68,0,666,668,3,137,68,0,667,666,1,0,0,0,668,671,1,0,0,0,669,667,1,0,0,0,
	669,670,1,0,0,0,670,140,1,0,0,0,671,669,1,0,0,0,80,0,154,161,167,174,179,
	184,189,194,199,201,207,213,220,222,227,280,291,310,316,323,325,328,331,
	337,340,343,349,351,359,364,370,377,380,389,398,401,407,409,414,420,422,
	426,433,442,446,451,457,479,485,488,495,501,503,510,517,524,530,532,542,
	546,552,556,561,568,574,581,586,589,594,604,615,619,624,635,637,642,653,
	660,669,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!YiniLexer.__ATN) {
			YiniLexer.__ATN = new ATNDeserializer().deserialize(YiniLexer._serializedATN);
		}

		return YiniLexer.__ATN;
	}


	static DecisionsToDFA = YiniLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}