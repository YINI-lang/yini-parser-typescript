// Generated from ./grammar/v1.0.0-rc.3/YiniLexer.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class YiniLexer extends Lexer {
	public static readonly YINI_TOKEN = 1;
	public static readonly INCLUDE_TOKEN = 2;
	public static readonly DEPRECATED_TOKEN = 3;
	public static readonly SECTION_HEAD = 4;
	public static readonly TERMINAL_TOKEN = 5;
	public static readonly SS = 6;
	public static readonly EUR = 7;
	public static readonly CARET = 8;
	public static readonly GT = 9;
	public static readonly LT = 10;
	public static readonly EQ = 11;
	public static readonly HASH = 12;
	public static readonly COMMA = 13;
	public static readonly COLON = 14;
	public static readonly OB = 15;
	public static readonly CB = 16;
	public static readonly OC = 17;
	public static readonly CC = 18;
	public static readonly PLUS = 19;
	public static readonly DOLLAR = 20;
	public static readonly PC = 21;
	public static readonly AT = 22;
	public static readonly SEMICOLON = 23;
	public static readonly BOOLEAN_FALSE = 24;
	public static readonly BOOLEAN_TRUE = 25;
	public static readonly NULL = 26;
	public static readonly EMPTY_OBJECT = 27;
	public static readonly EMPTY_LIST = 28;
	public static readonly SHEBANG = 29;
	public static readonly NUMBER = 30;
	public static readonly KEY = 31;
	public static readonly IDENT = 32;
	public static readonly IDENT_BACKTICKED = 33;
	public static readonly STRING = 34;
	public static readonly TRIPLE_QUOTED_STRING = 35;
	public static readonly SINGLE_OR_DOUBLE = 36;
	public static readonly R_AND_C_STRING = 37;
	public static readonly HYPER_STRING = 38;
	public static readonly ESC_SEQ = 39;
	public static readonly ESC_SEQ_BASE = 40;
	public static readonly NL = 41;
	public static readonly SINGLE_NL = 42;
	public static readonly WS = 43;
	public static readonly BLOCK_COMMENT = 44;
	public static readonly COMMENT = 45;
	public static readonly LINE_COMMENT = 46;
	public static readonly INLINE_COMMENT = 47;
	public static readonly IDENT_INVALID = 48;
	public static readonly REST = 49;
	public static readonly META_INVALID = 50;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            "'\\u00A7'", 
                                                            "'\\u20AC'", 
                                                            "'^'", "'>'", 
                                                            "'<'", "'='", 
                                                            "'#'", "','", 
                                                            "':'", "'['", 
                                                            "']'", "'{'", 
                                                            "'}'", "'+'", 
                                                            "'$'", "'%'", 
                                                            "'@'", "';'", 
                                                            null, null, 
                                                            null, "'{}'", 
                                                            "'[]'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "YINI_TOKEN", 
                                                             "INCLUDE_TOKEN", 
                                                             "DEPRECATED_TOKEN", 
                                                             "SECTION_HEAD", 
                                                             "TERMINAL_TOKEN", 
                                                             "SS", "EUR", 
                                                             "CARET", "GT", 
                                                             "LT", "EQ", 
                                                             "HASH", "COMMA", 
                                                             "COLON", "OB", 
                                                             "CB", "OC", 
                                                             "CC", "PLUS", 
                                                             "DOLLAR", "PC", 
                                                             "AT", "SEMICOLON", 
                                                             "BOOLEAN_FALSE", 
                                                             "BOOLEAN_TRUE", 
                                                             "NULL", "EMPTY_OBJECT", 
                                                             "EMPTY_LIST", 
                                                             "SHEBANG", 
                                                             "NUMBER", "KEY", 
                                                             "IDENT", "IDENT_BACKTICKED", 
                                                             "STRING", "TRIPLE_QUOTED_STRING", 
                                                             "SINGLE_OR_DOUBLE", 
                                                             "R_AND_C_STRING", 
                                                             "HYPER_STRING", 
                                                             "ESC_SEQ", 
                                                             "ESC_SEQ_BASE", 
                                                             "NL", "SINGLE_NL", 
                                                             "WS", "BLOCK_COMMENT", 
                                                             "COMMENT", 
                                                             "LINE_COMMENT", 
                                                             "INLINE_COMMENT", 
                                                             "IDENT_INVALID", 
                                                             "REST", "META_INVALID" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"YINI_TOKEN", "INCLUDE_TOKEN", "DEPRECATED_TOKEN", "EBD", "SECTION_HEAD", 
		"SECTION_MARKER", "SECTION_MARKER_BASIC_REPEAT", "SECTION_MARKER_SHORTHAND", 
		"SECTION_MARKER_INVALID", "TERMINAL_TOKEN", "SS", "EUR", "CARET", "GT", 
		"LT", "EQ", "HASH", "COMMA", "COLON", "OB", "CB", "OC", "CC", "PLUS", 
		"DOLLAR", "PC", "AT", "SEMICOLON", "BOOLEAN_FALSE", "BOOLEAN_TRUE", "NULL", 
		"EMPTY_OBJECT", "EMPTY_LIST", "SHEBANG", "NUMBER", "KEY", "IDENT", "IDENT_BACKTICKED", 
		"STRING", "TRIPLE_QUOTED_STRING", "SINGLE_OR_DOUBLE", "R_AND_C_STRING", 
		"HYPER_STRING", "ESC_SEQ", "ESC_SEQ_BASE", "UNICODE16", "UNICODE32", "INTEGER", 
		"DECIMAL_INTEGER", "BIN_INTEGER", "OCT_INTEGER", "DUO_INTEGER", "HEX_INTEGER", 
		"DIGIT", "BIN_DIGIT", "OCT_DIGIT", "DUO_DIGIT", "HEX_DIGIT", "FRACTION", 
		"EXPONENT", "SIGN", "NL", "SINGLE_NL", "WS", "BLOCK_COMMENT", "COMMENT", 
		"DISABLE_LINE_MARKER", "LINE_COMMENT", "INLINE_COMMENT", "IDENT_INVALID", 
		"REST_CHAR", "REST", "META_INVALID",
	];


	  // Below is TypeScript code:
	  public atLineStart(): boolean { return this.column === 0; }


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, YiniLexer._ATN, YiniLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "YiniLexer.g4"; }

	public get literalNames(): (string | null)[] { return YiniLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return YiniLexer.symbolicNames; }
	public get ruleNames(): string[] { return YiniLexer.ruleNames; }

	public get serializedATN(): number[] { return YiniLexer._serializedATN; }

	public get channelNames(): string[] { return YiniLexer.channelNames; }

	public get modeNames(): string[] { return YiniLexer.modeNames; }

	// @Override
	public sempred(localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 67:
			return this.LINE_COMMENT_sempred(localctx, predIndex);
		}
		return true;
	}
	private LINE_COMMENT_sempred(localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.atLineStart();
		}
		return true;
	}

	public static readonly _serializedATN: number[] = [4,0,50,705,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,1,0,1,0,1,0,1,0,
	1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
	1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,5,4,181,8,4,10,4,12,4,184,9,
	4,1,4,5,4,187,8,4,10,4,12,4,190,9,4,1,4,1,4,4,4,194,8,4,11,4,12,4,195,1,
	5,1,5,1,5,3,5,201,8,5,1,6,4,6,204,8,6,11,6,12,6,205,1,6,4,6,209,8,6,11,
	6,12,6,210,1,6,4,6,214,8,6,11,6,12,6,215,1,6,4,6,219,8,6,11,6,12,6,220,
	3,6,223,8,6,1,7,1,7,1,7,1,7,3,7,229,8,7,1,7,1,7,5,7,233,8,7,10,7,12,7,236,
	9,7,1,8,1,8,1,8,1,8,4,8,242,8,8,11,8,12,8,243,1,8,4,8,247,8,8,11,8,12,8,
	248,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
	14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
	1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,
	28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,302,8,28,1,29,1,29,1,29,1,29,
	1,29,1,29,1,29,1,29,1,29,3,29,313,8,29,1,30,1,30,1,30,1,30,1,30,1,31,1,
	31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,33,5,33,330,8,33,10,33,12,33,333,
	9,33,1,33,1,33,1,34,3,34,338,8,34,1,34,1,34,1,34,4,34,343,8,34,11,34,12,
	34,344,3,34,347,8,34,1,34,3,34,350,8,34,1,34,3,34,353,8,34,1,34,1,34,4,
	34,357,8,34,11,34,12,34,358,1,34,3,34,362,8,34,1,34,3,34,365,8,34,1,34,
	1,34,1,34,1,34,3,34,371,8,34,3,34,373,8,34,1,35,1,35,1,36,1,36,5,36,379,
	8,36,10,36,12,36,382,9,36,1,36,1,36,3,36,386,8,36,1,37,1,37,5,37,390,8,
	37,10,37,12,37,393,9,37,1,37,1,37,1,38,1,38,3,38,399,8,38,1,39,3,39,402,
	8,39,1,39,1,39,1,39,1,39,1,39,5,39,409,8,39,10,39,12,39,412,9,39,1,39,1,
	39,1,39,1,39,1,40,1,40,3,40,420,8,40,1,41,3,41,423,8,41,1,41,1,41,1,41,
	1,41,5,41,429,8,41,10,41,12,41,432,9,41,1,41,1,41,3,41,436,8,41,1,41,1,
	41,1,41,1,41,5,41,442,8,41,10,41,12,41,445,9,41,1,41,3,41,448,8,41,1,42,
	1,42,1,42,5,42,453,8,42,10,42,12,42,456,9,42,1,42,1,42,1,42,1,42,5,42,462,
	8,42,10,42,12,42,465,9,42,1,42,3,42,468,8,42,1,43,1,43,1,43,3,43,473,8,
	43,1,44,1,44,1,44,1,44,3,44,479,8,44,1,45,1,45,1,45,1,45,1,45,1,45,1,46,
	1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,48,1,48,3,48,501,
	8,48,1,48,1,48,5,48,505,8,48,10,48,12,48,508,9,48,3,48,510,8,48,1,49,1,
	49,1,49,4,49,515,8,49,11,49,12,49,516,1,49,1,49,4,49,521,8,49,11,49,12,
	49,522,3,49,525,8,49,1,50,1,50,1,50,4,50,530,8,50,11,50,12,50,531,1,51,
	1,51,1,51,4,51,537,8,51,11,51,12,51,538,1,52,1,52,1,52,4,52,544,8,52,11,
	52,12,52,545,1,52,1,52,4,52,550,8,52,11,52,12,52,551,3,52,554,8,52,1,53,
	1,53,1,54,1,54,1,55,1,55,1,56,1,56,3,56,564,8,56,1,57,1,57,3,57,568,8,57,
	1,58,1,58,4,58,572,8,58,11,58,12,58,573,1,59,1,59,3,59,578,8,59,1,59,4,
	59,581,8,59,11,59,12,59,582,1,60,1,60,1,61,5,61,588,8,61,10,61,12,61,591,
	9,61,1,61,5,61,594,8,61,10,61,12,61,597,9,61,1,61,1,61,5,61,601,8,61,10,
	61,12,61,604,9,61,1,62,1,62,3,62,608,8,62,1,62,3,62,611,8,62,1,63,4,63,
	614,8,63,11,63,12,63,615,1,63,1,63,1,64,1,64,1,64,1,64,5,64,624,8,64,10,
	64,12,64,627,9,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,3,65,637,8,65,
	1,66,1,66,1,66,1,67,1,67,5,67,644,8,67,10,67,12,67,647,9,67,1,67,1,67,3,
	67,651,8,67,1,67,5,67,654,8,67,10,67,12,67,657,9,67,1,67,1,67,1,68,1,68,
	1,68,1,68,4,68,665,8,68,11,68,12,68,666,3,68,669,8,68,1,68,5,68,672,8,68,
	10,68,12,68,675,9,68,1,68,1,68,1,69,1,69,5,69,681,8,69,10,69,12,69,684,
	9,69,1,70,1,70,1,71,1,71,5,71,690,8,71,10,71,12,71,693,9,71,1,72,1,72,3,
	72,697,8,72,1,72,1,72,5,72,701,8,72,10,72,12,72,704,9,72,2,410,625,0,73,
	1,1,3,2,5,3,7,0,9,4,11,0,13,0,15,0,17,0,19,5,21,6,23,7,25,8,27,9,29,10,
	31,11,33,12,35,13,37,14,39,15,41,16,43,17,45,18,47,19,49,20,51,21,53,22,
	55,23,57,24,59,25,61,26,63,27,65,28,67,29,69,30,71,31,73,32,75,33,77,34,
	79,35,81,36,83,37,85,38,87,39,89,40,91,0,93,0,95,0,97,0,99,0,101,0,103,
	0,105,0,107,0,109,0,111,0,113,0,115,0,117,0,119,0,121,0,123,41,125,42,127,
	43,129,44,131,45,133,0,135,46,137,47,139,48,141,0,143,49,145,50,1,0,40,
	2,0,89,89,121,121,2,0,73,73,105,105,2,0,78,78,110,110,2,0,67,67,99,99,2,
	0,76,76,108,108,2,0,85,85,117,117,2,0,68,68,100,100,2,0,69,69,101,101,2,
	0,80,80,112,112,2,0,82,82,114,114,2,0,65,65,97,97,2,0,84,84,116,116,2,0,
	9,9,32,32,1,0,49,57,2,0,70,70,102,102,2,0,83,83,115,115,2,0,79,79,111,111,
	2,0,8,10,12,13,3,0,65,90,95,95,97,122,5,0,46,46,48,57,65,90,95,95,97,122,
	2,0,0,31,96,96,4,0,67,67,82,82,99,99,114,114,3,0,10,10,13,13,39,39,3,0,
	10,10,13,13,34,34,2,0,72,72,104,104,1,0,39,39,1,0,34,34,2,0,34,34,39,39,
	9,0,48,48,63,63,92,92,97,98,102,102,110,110,114,114,116,116,118,118,2,0,
	66,66,98,98,2,0,90,90,122,122,2,0,88,88,120,120,1,0,48,57,1,0,48,55,6,0,
	65,66,69,69,88,88,97,98,101,101,120,120,2,0,65,70,97,102,2,0,43,43,45,45,
	2,0,10,10,13,13,4,0,48,57,65,90,95,95,97,122,14,0,9,10,13,13,32,32,34,34,
	39,39,44,45,47,58,61,61,64,64,91,91,93,93,96,96,123,123,125,125,776,0,1,
	1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,9,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
	23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
	0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,
	45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
	0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
	67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
	0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,
	89,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
	1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,143,1,0,0,0,0,145,1,
	0,0,0,1,147,1,0,0,0,3,153,1,0,0,0,5,162,1,0,0,0,7,174,1,0,0,0,9,178,1,0,
	0,0,11,200,1,0,0,0,13,222,1,0,0,0,15,228,1,0,0,0,17,241,1,0,0,0,19,250,
	1,0,0,0,21,255,1,0,0,0,23,257,1,0,0,0,25,259,1,0,0,0,27,261,1,0,0,0,29,
	263,1,0,0,0,31,265,1,0,0,0,33,267,1,0,0,0,35,269,1,0,0,0,37,271,1,0,0,0,
	39,273,1,0,0,0,41,275,1,0,0,0,43,277,1,0,0,0,45,279,1,0,0,0,47,281,1,0,
	0,0,49,283,1,0,0,0,51,285,1,0,0,0,53,287,1,0,0,0,55,289,1,0,0,0,57,301,
	1,0,0,0,59,312,1,0,0,0,61,314,1,0,0,0,63,319,1,0,0,0,65,322,1,0,0,0,67,
	325,1,0,0,0,69,372,1,0,0,0,71,374,1,0,0,0,73,385,1,0,0,0,75,387,1,0,0,0,
	77,398,1,0,0,0,79,401,1,0,0,0,81,419,1,0,0,0,83,447,1,0,0,0,85,467,1,0,
	0,0,87,472,1,0,0,0,89,474,1,0,0,0,91,480,1,0,0,0,93,486,1,0,0,0,95,496,
	1,0,0,0,97,509,1,0,0,0,99,524,1,0,0,0,101,526,1,0,0,0,103,533,1,0,0,0,105,
	553,1,0,0,0,107,555,1,0,0,0,109,557,1,0,0,0,111,559,1,0,0,0,113,563,1,0,
	0,0,115,567,1,0,0,0,117,569,1,0,0,0,119,575,1,0,0,0,121,584,1,0,0,0,123,
	589,1,0,0,0,125,610,1,0,0,0,127,613,1,0,0,0,129,619,1,0,0,0,131,636,1,0,
	0,0,133,638,1,0,0,0,135,641,1,0,0,0,137,668,1,0,0,0,139,678,1,0,0,0,141,
	685,1,0,0,0,143,687,1,0,0,0,145,694,1,0,0,0,147,148,5,64,0,0,148,149,7,
	0,0,0,149,150,7,1,0,0,150,151,7,2,0,0,151,152,7,1,0,0,152,2,1,0,0,0,153,
	154,5,64,0,0,154,155,7,1,0,0,155,156,7,2,0,0,156,157,7,3,0,0,157,158,7,
	4,0,0,158,159,7,5,0,0,159,160,7,6,0,0,160,161,7,7,0,0,161,4,1,0,0,0,162,
	163,5,64,0,0,163,164,7,6,0,0,164,165,7,7,0,0,165,166,7,8,0,0,166,167,7,
	9,0,0,167,168,7,7,0,0,168,169,7,3,0,0,169,170,7,10,0,0,170,171,7,11,0,0,
	171,172,7,7,0,0,172,173,7,6,0,0,173,6,1,0,0,0,174,175,2,48,49,0,175,176,
	2,48,49,0,176,177,2,48,49,0,177,8,1,0,0,0,178,182,3,11,5,0,179,181,7,12,
	0,0,180,179,1,0,0,0,181,184,1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,
	188,1,0,0,0,184,182,1,0,0,0,185,187,3,127,63,0,186,185,1,0,0,0,187,190,
	1,0,0,0,188,186,1,0,0,0,188,189,1,0,0,0,189,191,1,0,0,0,190,188,1,0,0,0,
	191,193,3,73,36,0,192,194,3,123,61,0,193,192,1,0,0,0,194,195,1,0,0,0,195,
	193,1,0,0,0,195,196,1,0,0,0,196,10,1,0,0,0,197,201,3,13,6,0,198,201,3,15,
	7,0,199,201,3,17,8,0,200,197,1,0,0,0,200,198,1,0,0,0,200,199,1,0,0,0,201,
	12,1,0,0,0,202,204,3,25,12,0,203,202,1,0,0,0,204,205,1,0,0,0,205,203,1,
	0,0,0,205,206,1,0,0,0,206,223,1,0,0,0,207,209,3,29,14,0,208,207,1,0,0,0,
	209,210,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,223,1,0,0,0,212,214,
	3,21,10,0,213,212,1,0,0,0,214,215,1,0,0,0,215,213,1,0,0,0,215,216,1,0,0,
	0,216,223,1,0,0,0,217,219,3,23,11,0,218,217,1,0,0,0,219,220,1,0,0,0,220,
	218,1,0,0,0,220,221,1,0,0,0,221,223,1,0,0,0,222,203,1,0,0,0,222,208,1,0,
	0,0,222,213,1,0,0,0,222,218,1,0,0,0,223,14,1,0,0,0,224,229,3,25,12,0,225,
	229,3,29,14,0,226,229,3,21,10,0,227,229,3,23,11,0,228,224,1,0,0,0,228,225,
	1,0,0,0,228,226,1,0,0,0,228,227,1,0,0,0,229,230,1,0,0,0,230,234,7,13,0,
	0,231,233,3,107,53,0,232,231,1,0,0,0,233,236,1,0,0,0,234,232,1,0,0,0,234,
	235,1,0,0,0,235,16,1,0,0,0,236,234,1,0,0,0,237,242,3,25,12,0,238,242,3,
	29,14,0,239,242,3,21,10,0,240,242,3,23,11,0,241,237,1,0,0,0,241,238,1,0,
	0,0,241,239,1,0,0,0,241,240,1,0,0,0,242,243,1,0,0,0,243,241,1,0,0,0,243,
	244,1,0,0,0,244,246,1,0,0,0,245,247,3,107,53,0,246,245,1,0,0,0,247,248,
	1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,18,1,0,0,0,250,251,5,47,0,0,
	251,252,7,7,0,0,252,253,7,2,0,0,253,254,7,6,0,0,254,20,1,0,0,0,255,256,
	5,167,0,0,256,22,1,0,0,0,257,258,5,8364,0,0,258,24,1,0,0,0,259,260,5,94,
	0,0,260,26,1,0,0,0,261,262,5,62,0,0,262,28,1,0,0,0,263,264,5,60,0,0,264,
	30,1,0,0,0,265,266,5,61,0,0,266,32,1,0,0,0,267,268,5,35,0,0,268,34,1,0,
	0,0,269,270,5,44,0,0,270,36,1,0,0,0,271,272,5,58,0,0,272,38,1,0,0,0,273,
	274,5,91,0,0,274,40,1,0,0,0,275,276,5,93,0,0,276,42,1,0,0,0,277,278,5,123,
	0,0,278,44,1,0,0,0,279,280,5,125,0,0,280,46,1,0,0,0,281,282,5,43,0,0,282,
	48,1,0,0,0,283,284,5,36,0,0,284,50,1,0,0,0,285,286,5,37,0,0,286,52,1,0,
	0,0,287,288,5,64,0,0,288,54,1,0,0,0,289,290,5,59,0,0,290,56,1,0,0,0,291,
	292,7,14,0,0,292,293,7,10,0,0,293,294,7,4,0,0,294,295,7,15,0,0,295,302,
	7,7,0,0,296,297,7,16,0,0,297,298,7,14,0,0,298,302,7,14,0,0,299,300,7,2,
	0,0,300,302,7,16,0,0,301,291,1,0,0,0,301,296,1,0,0,0,301,299,1,0,0,0,302,
	58,1,0,0,0,303,304,7,11,0,0,304,305,7,9,0,0,305,306,7,5,0,0,306,313,7,7,
	0,0,307,308,7,16,0,0,308,313,7,2,0,0,309,310,7,0,0,0,310,311,7,7,0,0,311,
	313,7,15,0,0,312,303,1,0,0,0,312,307,1,0,0,0,312,309,1,0,0,0,313,60,1,0,
	0,0,314,315,7,2,0,0,315,316,7,5,0,0,316,317,7,4,0,0,317,318,7,4,0,0,318,
	62,1,0,0,0,319,320,5,123,0,0,320,321,5,125,0,0,321,64,1,0,0,0,322,323,5,
	91,0,0,323,324,5,93,0,0,324,66,1,0,0,0,325,326,5,35,0,0,326,327,5,33,0,
	0,327,331,1,0,0,0,328,330,8,17,0,0,329,328,1,0,0,0,330,333,1,0,0,0,331,
	329,1,0,0,0,331,332,1,0,0,0,332,334,1,0,0,0,333,331,1,0,0,0,334,335,3,123,
	61,0,335,68,1,0,0,0,336,338,3,121,60,0,337,336,1,0,0,0,337,338,1,0,0,0,
	338,339,1,0,0,0,339,346,3,95,47,0,340,342,5,46,0,0,341,343,3,107,53,0,342,
	341,1,0,0,0,343,344,1,0,0,0,344,342,1,0,0,0,344,345,1,0,0,0,345,347,1,0,
	0,0,346,340,1,0,0,0,346,347,1,0,0,0,347,349,1,0,0,0,348,350,3,119,59,0,
	349,348,1,0,0,0,349,350,1,0,0,0,350,373,1,0,0,0,351,353,3,121,60,0,352,
	351,1,0,0,0,352,353,1,0,0,0,353,354,1,0,0,0,354,356,5,46,0,0,355,357,3,
	107,53,0,356,355,1,0,0,0,357,358,1,0,0,0,358,356,1,0,0,0,358,359,1,0,0,
	0,359,361,1,0,0,0,360,362,3,119,59,0,361,360,1,0,0,0,361,362,1,0,0,0,362,
	373,1,0,0,0,363,365,3,121,60,0,364,363,1,0,0,0,364,365,1,0,0,0,365,370,
	1,0,0,0,366,371,3,99,49,0,367,371,3,101,50,0,368,371,3,103,51,0,369,371,
	3,105,52,0,370,366,1,0,0,0,370,367,1,0,0,0,370,368,1,0,0,0,370,369,1,0,
	0,0,371,373,1,0,0,0,372,337,1,0,0,0,372,352,1,0,0,0,372,364,1,0,0,0,373,
	70,1,0,0,0,374,375,3,73,36,0,375,72,1,0,0,0,376,380,7,18,0,0,377,379,7,
	19,0,0,378,377,1,0,0,0,379,382,1,0,0,0,380,378,1,0,0,0,380,381,1,0,0,0,
	381,386,1,0,0,0,382,380,1,0,0,0,383,386,3,75,37,0,384,386,3,139,69,0,385,
	376,1,0,0,0,385,383,1,0,0,0,385,384,1,0,0,0,386,74,1,0,0,0,387,391,5,96,
	0,0,388,390,8,20,0,0,389,388,1,0,0,0,390,393,1,0,0,0,391,389,1,0,0,0,391,
	392,1,0,0,0,392,394,1,0,0,0,393,391,1,0,0,0,394,395,5,96,0,0,395,76,1,0,
	0,0,396,399,3,79,39,0,397,399,3,81,40,0,398,396,1,0,0,0,398,397,1,0,0,0,
	399,78,1,0,0,0,400,402,7,21,0,0,401,400,1,0,0,0,401,402,1,0,0,0,402,403,
	1,0,0,0,403,404,5,34,0,0,404,405,5,34,0,0,405,406,5,34,0,0,406,410,1,0,
	0,0,407,409,9,0,0,0,408,407,1,0,0,0,409,412,1,0,0,0,410,411,1,0,0,0,410,
	408,1,0,0,0,411,413,1,0,0,0,412,410,1,0,0,0,413,414,5,34,0,0,414,415,5,
	34,0,0,415,416,5,34,0,0,416,80,1,0,0,0,417,420,3,83,41,0,418,420,3,85,42,
	0,419,417,1,0,0,0,419,418,1,0,0,0,420,82,1,0,0,0,421,423,7,21,0,0,422,421,
	1,0,0,0,422,423,1,0,0,0,423,424,1,0,0,0,424,430,5,39,0,0,425,426,5,92,0,
	0,426,429,5,39,0,0,427,429,8,22,0,0,428,425,1,0,0,0,428,427,1,0,0,0,429,
	432,1,0,0,0,430,428,1,0,0,0,430,431,1,0,0,0,431,433,1,0,0,0,432,430,1,0,
	0,0,433,448,5,39,0,0,434,436,7,21,0,0,435,434,1,0,0,0,435,436,1,0,0,0,436,
	437,1,0,0,0,437,443,5,34,0,0,438,439,5,92,0,0,439,442,5,34,0,0,440,442,
	8,23,0,0,441,438,1,0,0,0,441,440,1,0,0,0,442,445,1,0,0,0,443,441,1,0,0,
	0,443,444,1,0,0,0,444,446,1,0,0,0,445,443,1,0,0,0,446,448,5,34,0,0,447,
	422,1,0,0,0,447,435,1,0,0,0,448,84,1,0,0,0,449,450,7,24,0,0,450,454,5,39,
	0,0,451,453,8,25,0,0,452,451,1,0,0,0,453,456,1,0,0,0,454,452,1,0,0,0,454,
	455,1,0,0,0,455,457,1,0,0,0,456,454,1,0,0,0,457,468,5,39,0,0,458,459,7,
	24,0,0,459,463,5,34,0,0,460,462,8,26,0,0,461,460,1,0,0,0,462,465,1,0,0,
	0,463,461,1,0,0,0,463,464,1,0,0,0,464,466,1,0,0,0,465,463,1,0,0,0,466,468,
	5,34,0,0,467,449,1,0,0,0,467,458,1,0,0,0,468,86,1,0,0,0,469,470,5,92,0,
	0,470,473,7,27,0,0,471,473,3,89,44,0,472,469,1,0,0,0,472,471,1,0,0,0,473,
	88,1,0,0,0,474,478,5,92,0,0,475,479,7,28,0,0,476,479,3,91,45,0,477,479,
	3,93,46,0,478,475,1,0,0,0,478,476,1,0,0,0,478,477,1,0,0,0,479,90,1,0,0,
	0,480,481,5,117,0,0,481,482,3,115,57,0,482,483,3,115,57,0,483,484,3,115,
	57,0,484,485,3,115,57,0,485,92,1,0,0,0,486,487,5,85,0,0,487,488,3,115,57,
	0,488,489,3,115,57,0,489,490,3,115,57,0,490,491,3,115,57,0,491,492,3,115,
	57,0,492,493,3,115,57,0,493,494,3,115,57,0,494,495,3,115,57,0,495,94,1,
	0,0,0,496,497,3,97,48,0,497,96,1,0,0,0,498,510,5,48,0,0,499,501,3,121,60,
	0,500,499,1,0,0,0,500,501,1,0,0,0,501,502,1,0,0,0,502,506,7,13,0,0,503,
	505,3,107,53,0,504,503,1,0,0,0,505,508,1,0,0,0,506,504,1,0,0,0,506,507,
	1,0,0,0,507,510,1,0,0,0,508,506,1,0,0,0,509,498,1,0,0,0,509,500,1,0,0,0,
	510,98,1,0,0,0,511,512,5,48,0,0,512,514,7,29,0,0,513,515,3,109,54,0,514,
	513,1,0,0,0,515,516,1,0,0,0,516,514,1,0,0,0,516,517,1,0,0,0,517,525,1,0,
	0,0,518,520,5,37,0,0,519,521,3,109,54,0,520,519,1,0,0,0,521,522,1,0,0,0,
	522,520,1,0,0,0,522,523,1,0,0,0,523,525,1,0,0,0,524,511,1,0,0,0,524,518,
	1,0,0,0,525,100,1,0,0,0,526,527,5,48,0,0,527,529,7,16,0,0,528,530,3,111,
	55,0,529,528,1,0,0,0,530,531,1,0,0,0,531,529,1,0,0,0,531,532,1,0,0,0,532,
	102,1,0,0,0,533,534,5,48,0,0,534,536,7,30,0,0,535,537,3,113,56,0,536,535,
	1,0,0,0,537,538,1,0,0,0,538,536,1,0,0,0,538,539,1,0,0,0,539,104,1,0,0,0,
	540,541,5,48,0,0,541,543,7,31,0,0,542,544,3,115,57,0,543,542,1,0,0,0,544,
	545,1,0,0,0,545,543,1,0,0,0,545,546,1,0,0,0,546,554,1,0,0,0,547,549,5,35,
	0,0,548,550,3,115,57,0,549,548,1,0,0,0,550,551,1,0,0,0,551,549,1,0,0,0,
	551,552,1,0,0,0,552,554,1,0,0,0,553,540,1,0,0,0,553,547,1,0,0,0,554,106,
	1,0,0,0,555,556,7,32,0,0,556,108,1,0,0,0,557,558,2,48,49,0,558,110,1,0,
	0,0,559,560,7,33,0,0,560,112,1,0,0,0,561,564,3,107,53,0,562,564,7,34,0,
	0,563,561,1,0,0,0,563,562,1,0,0,0,564,114,1,0,0,0,565,568,3,107,53,0,566,
	568,7,35,0,0,567,565,1,0,0,0,567,566,1,0,0,0,568,116,1,0,0,0,569,571,5,
	46,0,0,570,572,3,107,53,0,571,570,1,0,0,0,572,573,1,0,0,0,573,571,1,0,0,
	0,573,574,1,0,0,0,574,118,1,0,0,0,575,577,7,7,0,0,576,578,3,121,60,0,577,
	576,1,0,0,0,577,578,1,0,0,0,578,580,1,0,0,0,579,581,3,107,53,0,580,579,
	1,0,0,0,581,582,1,0,0,0,582,580,1,0,0,0,582,583,1,0,0,0,583,120,1,0,0,0,
	584,585,7,36,0,0,585,122,1,0,0,0,586,588,3,127,63,0,587,586,1,0,0,0,588,
	591,1,0,0,0,589,587,1,0,0,0,589,590,1,0,0,0,590,595,1,0,0,0,591,589,1,0,
	0,0,592,594,3,131,65,0,593,592,1,0,0,0,594,597,1,0,0,0,595,593,1,0,0,0,
	595,596,1,0,0,0,596,598,1,0,0,0,597,595,1,0,0,0,598,602,3,125,62,0,599,
	601,3,131,65,0,600,599,1,0,0,0,601,604,1,0,0,0,602,600,1,0,0,0,602,603,
	1,0,0,0,603,124,1,0,0,0,604,602,1,0,0,0,605,607,5,13,0,0,606,608,5,10,0,
	0,607,606,1,0,0,0,607,608,1,0,0,0,608,611,1,0,0,0,609,611,5,10,0,0,610,
	605,1,0,0,0,610,609,1,0,0,0,611,126,1,0,0,0,612,614,7,12,0,0,613,612,1,
	0,0,0,614,615,1,0,0,0,615,613,1,0,0,0,615,616,1,0,0,0,616,617,1,0,0,0,617,
	618,6,63,0,0,618,128,1,0,0,0,619,620,5,47,0,0,620,621,5,42,0,0,621,625,
	1,0,0,0,622,624,9,0,0,0,623,622,1,0,0,0,624,627,1,0,0,0,625,626,1,0,0,0,
	625,623,1,0,0,0,626,628,1,0,0,0,627,625,1,0,0,0,628,629,5,42,0,0,629,630,
	5,47,0,0,630,631,1,0,0,0,631,632,6,64,0,0,632,130,1,0,0,0,633,637,3,135,
	67,0,634,637,3,137,68,0,635,637,3,129,64,0,636,633,1,0,0,0,636,634,1,0,
	0,0,636,635,1,0,0,0,637,132,1,0,0,0,638,639,5,45,0,0,639,640,5,45,0,0,640,
	134,1,0,0,0,641,645,4,67,0,0,642,644,7,12,0,0,643,642,1,0,0,0,644,647,1,
	0,0,0,645,643,1,0,0,0,645,646,1,0,0,0,646,650,1,0,0,0,647,645,1,0,0,0,648,
	651,3,133,66,0,649,651,3,55,27,0,650,648,1,0,0,0,650,649,1,0,0,0,651,655,
	1,0,0,0,652,654,8,37,0,0,653,652,1,0,0,0,654,657,1,0,0,0,655,653,1,0,0,
	0,655,656,1,0,0,0,656,658,1,0,0,0,657,655,1,0,0,0,658,659,6,67,0,0,659,
	136,1,0,0,0,660,661,5,47,0,0,661,669,5,47,0,0,662,664,5,35,0,0,663,665,
	7,12,0,0,664,663,1,0,0,0,665,666,1,0,0,0,666,664,1,0,0,0,666,667,1,0,0,
	0,667,669,1,0,0,0,668,660,1,0,0,0,668,662,1,0,0,0,669,673,1,0,0,0,670,672,
	8,37,0,0,671,670,1,0,0,0,672,675,1,0,0,0,673,671,1,0,0,0,673,674,1,0,0,
	0,674,676,1,0,0,0,675,673,1,0,0,0,676,677,6,68,0,0,677,138,1,0,0,0,678,
	682,7,32,0,0,679,681,7,38,0,0,680,679,1,0,0,0,681,684,1,0,0,0,682,680,1,
	0,0,0,682,683,1,0,0,0,683,140,1,0,0,0,684,682,1,0,0,0,685,686,8,39,0,0,
	686,142,1,0,0,0,687,691,3,141,70,0,688,690,3,141,70,0,689,688,1,0,0,0,690,
	693,1,0,0,0,691,689,1,0,0,0,691,692,1,0,0,0,692,144,1,0,0,0,693,691,1,0,
	0,0,694,696,3,53,26,0,695,697,3,127,63,0,696,695,1,0,0,0,696,697,1,0,0,
	0,697,698,1,0,0,0,698,702,3,143,71,0,699,701,3,143,71,0,700,699,1,0,0,0,
	701,704,1,0,0,0,702,700,1,0,0,0,702,703,1,0,0,0,703,146,1,0,0,0,704,702,
	1,0,0,0,81,0,182,188,195,200,205,210,215,220,222,228,234,241,243,248,301,
	312,331,337,344,346,349,352,358,361,364,370,372,380,385,391,398,401,410,
	419,422,428,430,435,441,443,447,454,463,467,472,478,500,506,509,516,522,
	524,531,538,545,551,553,563,567,573,577,582,589,595,602,607,610,615,625,
	636,645,650,655,666,668,673,682,691,696,702,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!YiniLexer.__ATN) {
			YiniLexer.__ATN = new ATNDeserializer().deserialize(YiniLexer._serializedATN);
		}

		return YiniLexer.__ATN;
	}


	static DecisionsToDFA = YiniLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}