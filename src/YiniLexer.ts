// Generated from specs/v1.0.0-beta.3/YiniLexer.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class YiniLexer extends Lexer {
	public static readonly COMMENT = 1;
	public static readonly SECTION_HEAD = 2;
	public static readonly TERMINAL_TOKEN = 3;
	public static readonly SS = 4;
	public static readonly EUR = 5;
	public static readonly GT = 6;
	public static readonly TILDE = 7;
	public static readonly EQ = 8;
	public static readonly HASH = 9;
	public static readonly COMMA = 10;
	public static readonly COLON = 11;
	public static readonly OB = 12;
	public static readonly CB = 13;
	public static readonly PLUS = 14;
	public static readonly DOLLAR = 15;
	public static readonly PC = 16;
	public static readonly AT = 17;
	public static readonly SEMICOLON = 18;
	public static readonly BOOLEAN_FALSE = 19;
	public static readonly BOOLEAN_TRUE = 20;
	public static readonly NULL = 21;
	public static readonly EMPTY_LIST = 22;
	public static readonly SHEBANG = 23;
	public static readonly KEY = 24;
	public static readonly IDENT = 25;
	public static readonly PHRASE = 26;
	public static readonly NUMBER = 27;
	public static readonly STRING = 28;
	public static readonly RAW_STRING = 29;
	public static readonly HYPER_STRING = 30;
	public static readonly CLASSIC_STRING = 31;
	public static readonly TRIPLE_QUOTED_STRING = 32;
	public static readonly ESC_SEQ = 33;
	public static readonly ESC_SEQ_BASE = 34;
	public static readonly NL = 35;
	public static readonly SINGLE_NL = 36;
	public static readonly WS = 37;
	public static readonly BLOCK_COMMENT = 38;
	public static readonly LINE_COMMENT = 39;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            "'\\u00A7'", 
                                                            "'\\u20AC'", 
                                                            "'>'", "'~'", 
                                                            "'='", "'#'", 
                                                            "','", "':'", 
                                                            "'['", "']'", 
                                                            "'+'", "'$'", 
                                                            "'%'", "'@'", 
                                                            "';'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "COMMENT", 
                                                             "SECTION_HEAD", 
                                                             "TERMINAL_TOKEN", 
                                                             "SS", "EUR", 
                                                             "GT", "TILDE", 
                                                             "EQ", "HASH", 
                                                             "COMMA", "COLON", 
                                                             "OB", "CB", 
                                                             "PLUS", "DOLLAR", 
                                                             "PC", "AT", 
                                                             "SEMICOLON", 
                                                             "BOOLEAN_FALSE", 
                                                             "BOOLEAN_TRUE", 
                                                             "NULL", "EMPTY_LIST", 
                                                             "SHEBANG", 
                                                             "KEY", "IDENT", 
                                                             "PHRASE", "NUMBER", 
                                                             "STRING", "RAW_STRING", 
                                                             "HYPER_STRING", 
                                                             "CLASSIC_STRING", 
                                                             "TRIPLE_QUOTED_STRING", 
                                                             "ESC_SEQ", 
                                                             "ESC_SEQ_BASE", 
                                                             "NL", "SINGLE_NL", 
                                                             "WS", "BLOCK_COMMENT", 
                                                             "LINE_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"EBD", "COMMENT", "SECTION_HEAD", "SECTION_MARKER", "TERMINAL_TOKEN", 
		"SS", "EUR", "GT", "TILDE", "EQ", "HASH", "COMMA", "COLON", "OB", "CB", 
		"PLUS", "DOLLAR", "PC", "AT", "SEMICOLON", "BOOLEAN_FALSE", "BOOLEAN_TRUE", 
		"NULL", "EMPTY_LIST", "SHEBANG", "KEY", "IDENT", "PHRASE", "NUMBER", "STRING", 
		"RAW_STRING", "HYPER_STRING", "CLASSIC_STRING", "TRIPLE_QUOTED_STRING", 
		"ESC_SEQ", "ESC_SEQ_BASE", "UNICODE", "INTEGER", "DECIMAL_INTEGER", "BIN_INTEGER", 
		"OCT_INTEGER", "DUO_INTEGER", "HEX_INTEGER", "DIGIT", "BIN_DIGIT", "OCT_DIGIT", 
		"DUO_DIGIT", "HEX_DIGIT", "FRACTION", "EXPONENT", "SIGN", "NL", "SINGLE_NL", 
		"WS", "BLOCK_COMMENT", "LINE_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, YiniLexer._ATN, YiniLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "YiniLexer.g4"; }

	public get literalNames(): (string | null)[] { return YiniLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return YiniLexer.symbolicNames; }
	public get ruleNames(): string[] { return YiniLexer.ruleNames; }

	public get serializedATN(): number[] { return YiniLexer._serializedATN; }

	public get channelNames(): string[] { return YiniLexer.channelNames; }

	public get modeNames(): string[] { return YiniLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,39,557,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,1,0,1,0,1,0,1,0,1,1,1,1,3,1,120,8,1,1,2,1,
	2,4,2,124,8,2,11,2,12,2,125,1,2,5,2,129,8,2,10,2,12,2,132,9,2,1,2,1,2,4,
	2,136,8,2,11,2,12,2,137,1,3,4,3,141,8,3,11,3,12,3,142,1,3,4,3,146,8,3,11,
	3,12,3,147,1,3,4,3,151,8,3,11,3,12,3,152,1,3,4,3,156,8,3,11,3,12,3,157,
	1,3,4,3,161,8,3,11,3,12,3,162,3,3,165,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,
	4,174,8,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,
	12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
	1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,216,8,20,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,227,8,21,1,22,1,22,1,22,
	1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,5,24,241,8,24,10,24,12,24,
	244,9,24,1,24,1,24,1,25,1,25,1,26,1,26,5,26,252,8,26,10,26,12,26,255,9,
	26,1,26,3,26,258,8,26,1,27,1,27,5,27,262,8,27,10,27,12,27,265,9,27,1,27,
	1,27,1,28,1,28,1,28,3,28,272,8,28,3,28,274,8,28,1,28,3,28,277,8,28,1,28,
	3,28,280,8,28,1,28,1,28,4,28,284,8,28,11,28,12,28,285,1,28,3,28,289,8,28,
	1,28,3,28,292,8,28,1,28,1,28,1,28,1,28,3,28,298,8,28,3,28,300,8,28,1,29,
	1,29,1,29,1,29,3,29,306,8,29,1,30,3,30,309,8,30,1,30,1,30,5,30,313,8,30,
	10,30,12,30,316,9,30,1,30,1,30,3,30,320,8,30,1,30,1,30,5,30,324,8,30,10,
	30,12,30,327,9,30,1,30,3,30,330,8,30,1,31,1,31,1,31,5,31,335,8,31,10,31,
	12,31,338,9,31,1,31,1,31,1,31,1,31,5,31,344,8,31,10,31,12,31,347,9,31,1,
	31,3,31,350,8,31,1,32,1,32,1,32,1,32,5,32,356,8,32,10,32,12,32,359,9,32,
	1,32,1,32,1,32,1,32,1,32,5,32,366,8,32,10,32,12,32,369,9,32,1,32,3,32,372,
	8,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,5,33,385,8,
	33,10,33,12,33,388,9,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,3,34,397,8,34,
	1,35,1,35,1,35,3,35,402,8,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,
	38,1,38,3,38,414,8,38,1,38,1,38,5,38,418,8,38,10,38,12,38,421,9,38,3,38,
	423,8,38,1,39,1,39,1,39,4,39,428,8,39,11,39,12,39,429,1,39,1,39,4,39,434,
	8,39,11,39,12,39,435,3,39,438,8,39,1,40,1,40,1,40,4,40,443,8,40,11,40,12,
	40,444,1,41,1,41,1,41,4,41,450,8,41,11,41,12,41,451,1,42,1,42,1,42,4,42,
	457,8,42,11,42,12,42,458,1,42,1,42,4,42,463,8,42,11,42,12,42,464,3,42,467,
	8,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,3,46,477,8,46,1,47,1,47,3,
	47,481,8,47,1,48,1,48,4,48,485,8,48,11,48,12,48,486,1,49,1,49,3,49,491,
	8,49,1,49,4,49,494,8,49,11,49,12,49,495,1,50,1,50,1,51,5,51,501,8,51,10,
	51,12,51,504,9,51,1,51,5,51,507,8,51,10,51,12,51,510,9,51,1,51,1,51,5,51,
	514,8,51,10,51,12,51,517,9,51,1,52,1,52,3,52,521,8,52,1,52,3,52,524,8,52,
	1,53,4,53,527,8,53,11,53,12,53,528,1,53,1,53,1,54,1,54,1,54,1,54,5,54,537,
	8,54,10,54,12,54,540,9,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,
	5,55,551,8,55,10,55,12,55,554,9,55,1,55,1,55,1,538,0,56,1,0,3,1,5,2,7,0,
	9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,35,
	16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,25,55,26,57,27,59,
	28,61,29,63,30,65,31,67,32,69,33,71,34,73,0,75,0,77,0,79,0,81,0,83,0,85,
	0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,35,105,36,107,37,109,38,
	111,39,1,0,34,2,0,9,9,32,32,2,0,69,69,101,101,2,0,78,78,110,110,2,0,68,
	68,100,100,2,0,70,70,102,102,2,0,65,65,97,97,2,0,76,76,108,108,2,0,83,83,
	115,115,2,0,79,79,111,111,2,0,84,84,116,116,2,0,82,82,114,114,2,0,85,85,
	117,117,2,0,89,89,121,121,2,0,8,10,12,13,3,0,65,90,95,95,97,122,4,0,48,
	57,65,90,95,95,97,122,2,0,10,10,13,13,3,0,10,10,13,13,39,39,3,0,10,10,13,
	13,34,34,2,0,72,72,104,104,1,0,39,39,1,0,34,34,2,0,67,67,99,99,2,0,34,34,
	39,39,7,0,47,48,92,92,98,98,102,102,110,110,114,114,116,116,1,0,49,57,2,
	0,66,66,98,98,2,0,90,90,122,122,2,0,88,88,120,120,1,0,48,57,1,0,48,55,4,
	0,69,69,88,88,101,101,120,120,2,0,65,70,97,102,2,0,43,43,45,45,618,0,3,
	1,0,0,0,0,5,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
	0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
	0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
	0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
	0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
	0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
	0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,
	0,0,1,113,1,0,0,0,3,119,1,0,0,0,5,121,1,0,0,0,7,164,1,0,0,0,9,173,1,0,0,
	0,11,175,1,0,0,0,13,177,1,0,0,0,15,179,1,0,0,0,17,181,1,0,0,0,19,183,1,
	0,0,0,21,185,1,0,0,0,23,187,1,0,0,0,25,189,1,0,0,0,27,191,1,0,0,0,29,193,
	1,0,0,0,31,195,1,0,0,0,33,197,1,0,0,0,35,199,1,0,0,0,37,201,1,0,0,0,39,
	203,1,0,0,0,41,215,1,0,0,0,43,226,1,0,0,0,45,228,1,0,0,0,47,233,1,0,0,0,
	49,236,1,0,0,0,51,247,1,0,0,0,53,257,1,0,0,0,55,259,1,0,0,0,57,299,1,0,
	0,0,59,305,1,0,0,0,61,329,1,0,0,0,63,349,1,0,0,0,65,371,1,0,0,0,67,373,
	1,0,0,0,69,396,1,0,0,0,71,398,1,0,0,0,73,403,1,0,0,0,75,409,1,0,0,0,77,
	422,1,0,0,0,79,437,1,0,0,0,81,439,1,0,0,0,83,446,1,0,0,0,85,466,1,0,0,0,
	87,468,1,0,0,0,89,470,1,0,0,0,91,472,1,0,0,0,93,476,1,0,0,0,95,480,1,0,
	0,0,97,482,1,0,0,0,99,488,1,0,0,0,101,497,1,0,0,0,103,502,1,0,0,0,105,523,
	1,0,0,0,107,526,1,0,0,0,109,532,1,0,0,0,111,546,1,0,0,0,113,114,2,48,49,
	0,114,115,2,48,49,0,115,116,2,48,49,0,116,2,1,0,0,0,117,120,3,109,54,0,
	118,120,3,111,55,0,119,117,1,0,0,0,119,118,1,0,0,0,120,4,1,0,0,0,121,123,
	3,7,3,0,122,124,7,0,0,0,123,122,1,0,0,0,124,125,1,0,0,0,125,123,1,0,0,0,
	125,126,1,0,0,0,126,130,1,0,0,0,127,129,3,107,53,0,128,127,1,0,0,0,129,
	132,1,0,0,0,130,128,1,0,0,0,130,131,1,0,0,0,131,133,1,0,0,0,132,130,1,0,
	0,0,133,135,3,53,26,0,134,136,3,103,51,0,135,134,1,0,0,0,136,137,1,0,0,
	0,137,135,1,0,0,0,137,138,1,0,0,0,138,6,1,0,0,0,139,141,3,21,10,0,140,139,
	1,0,0,0,141,142,1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,165,1,0,0,0,
	144,146,3,11,5,0,145,144,1,0,0,0,146,147,1,0,0,0,147,145,1,0,0,0,147,148,
	1,0,0,0,148,165,1,0,0,0,149,151,3,13,6,0,150,149,1,0,0,0,151,152,1,0,0,
	0,152,150,1,0,0,0,152,153,1,0,0,0,153,165,1,0,0,0,154,156,3,17,8,0,155,
	154,1,0,0,0,156,157,1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,165,1,0,
	0,0,159,161,3,15,7,0,160,159,1,0,0,0,161,162,1,0,0,0,162,160,1,0,0,0,162,
	163,1,0,0,0,163,165,1,0,0,0,164,140,1,0,0,0,164,145,1,0,0,0,164,150,1,0,
	0,0,164,155,1,0,0,0,164,160,1,0,0,0,165,8,1,0,0,0,166,167,5,47,0,0,167,
	168,7,1,0,0,168,169,7,2,0,0,169,174,7,3,0,0,170,171,5,35,0,0,171,172,5,
	35,0,0,172,174,5,35,0,0,173,166,1,0,0,0,173,170,1,0,0,0,174,10,1,0,0,0,
	175,176,5,167,0,0,176,12,1,0,0,0,177,178,5,8364,0,0,178,14,1,0,0,0,179,
	180,5,62,0,0,180,16,1,0,0,0,181,182,5,126,0,0,182,18,1,0,0,0,183,184,5,
	61,0,0,184,20,1,0,0,0,185,186,5,35,0,0,186,22,1,0,0,0,187,188,5,44,0,0,
	188,24,1,0,0,0,189,190,5,58,0,0,190,26,1,0,0,0,191,192,5,91,0,0,192,28,
	1,0,0,0,193,194,5,93,0,0,194,30,1,0,0,0,195,196,5,43,0,0,196,32,1,0,0,0,
	197,198,5,36,0,0,198,34,1,0,0,0,199,200,5,37,0,0,200,36,1,0,0,0,201,202,
	5,64,0,0,202,38,1,0,0,0,203,204,5,59,0,0,204,40,1,0,0,0,205,206,7,4,0,0,
	206,207,7,5,0,0,207,208,7,6,0,0,208,209,7,7,0,0,209,216,7,1,0,0,210,211,
	7,8,0,0,211,212,7,4,0,0,212,216,7,4,0,0,213,214,7,2,0,0,214,216,7,8,0,0,
	215,205,1,0,0,0,215,210,1,0,0,0,215,213,1,0,0,0,216,42,1,0,0,0,217,218,
	7,9,0,0,218,219,7,10,0,0,219,220,7,11,0,0,220,227,7,1,0,0,221,222,7,8,0,
	0,222,227,7,2,0,0,223,224,7,12,0,0,224,225,7,1,0,0,225,227,7,7,0,0,226,
	217,1,0,0,0,226,221,1,0,0,0,226,223,1,0,0,0,227,44,1,0,0,0,228,229,7,2,
	0,0,229,230,7,11,0,0,230,231,7,6,0,0,231,232,7,6,0,0,232,46,1,0,0,0,233,
	234,5,91,0,0,234,235,5,93,0,0,235,48,1,0,0,0,236,237,5,35,0,0,237,238,5,
	33,0,0,238,242,1,0,0,0,239,241,8,13,0,0,240,239,1,0,0,0,241,244,1,0,0,0,
	242,240,1,0,0,0,242,243,1,0,0,0,243,245,1,0,0,0,244,242,1,0,0,0,245,246,
	3,103,51,0,246,50,1,0,0,0,247,248,3,53,26,0,248,52,1,0,0,0,249,253,7,14,
	0,0,250,252,7,15,0,0,251,250,1,0,0,0,252,255,1,0,0,0,253,251,1,0,0,0,253,
	254,1,0,0,0,254,258,1,0,0,0,255,253,1,0,0,0,256,258,3,55,27,0,257,249,1,
	0,0,0,257,256,1,0,0,0,258,54,1,0,0,0,259,263,5,96,0,0,260,262,8,16,0,0,
	261,260,1,0,0,0,262,265,1,0,0,0,263,261,1,0,0,0,263,264,1,0,0,0,264,266,
	1,0,0,0,265,263,1,0,0,0,266,267,5,96,0,0,267,56,1,0,0,0,268,273,3,75,37,
	0,269,271,5,46,0,0,270,272,3,75,37,0,271,270,1,0,0,0,271,272,1,0,0,0,272,
	274,1,0,0,0,273,269,1,0,0,0,273,274,1,0,0,0,274,276,1,0,0,0,275,277,3,99,
	49,0,276,275,1,0,0,0,276,277,1,0,0,0,277,300,1,0,0,0,278,280,3,101,50,0,
	279,278,1,0,0,0,279,280,1,0,0,0,280,281,1,0,0,0,281,283,5,46,0,0,282,284,
	3,87,43,0,283,282,1,0,0,0,284,285,1,0,0,0,285,283,1,0,0,0,285,286,1,0,0,
	0,286,288,1,0,0,0,287,289,3,99,49,0,288,287,1,0,0,0,288,289,1,0,0,0,289,
	300,1,0,0,0,290,292,3,101,50,0,291,290,1,0,0,0,291,292,1,0,0,0,292,297,
	1,0,0,0,293,298,3,79,39,0,294,298,3,81,40,0,295,298,3,83,41,0,296,298,3,
	85,42,0,297,293,1,0,0,0,297,294,1,0,0,0,297,295,1,0,0,0,297,296,1,0,0,0,
	298,300,1,0,0,0,299,268,1,0,0,0,299,279,1,0,0,0,299,291,1,0,0,0,300,58,
	1,0,0,0,301,306,3,61,30,0,302,306,3,63,31,0,303,306,3,65,32,0,304,306,3,
	67,33,0,305,301,1,0,0,0,305,302,1,0,0,0,305,303,1,0,0,0,305,304,1,0,0,0,
	306,60,1,0,0,0,307,309,7,10,0,0,308,307,1,0,0,0,308,309,1,0,0,0,309,310,
	1,0,0,0,310,314,5,39,0,0,311,313,8,17,0,0,312,311,1,0,0,0,313,316,1,0,0,
	0,314,312,1,0,0,0,314,315,1,0,0,0,315,317,1,0,0,0,316,314,1,0,0,0,317,330,
	5,39,0,0,318,320,7,10,0,0,319,318,1,0,0,0,319,320,1,0,0,0,320,321,1,0,0,
	0,321,325,5,34,0,0,322,324,8,18,0,0,323,322,1,0,0,0,324,327,1,0,0,0,325,
	323,1,0,0,0,325,326,1,0,0,0,326,328,1,0,0,0,327,325,1,0,0,0,328,330,5,34,
	0,0,329,308,1,0,0,0,329,319,1,0,0,0,330,62,1,0,0,0,331,332,7,19,0,0,332,
	336,5,39,0,0,333,335,8,20,0,0,334,333,1,0,0,0,335,338,1,0,0,0,336,334,1,
	0,0,0,336,337,1,0,0,0,337,339,1,0,0,0,338,336,1,0,0,0,339,350,5,39,0,0,
	340,341,7,19,0,0,341,345,5,34,0,0,342,344,8,21,0,0,343,342,1,0,0,0,344,
	347,1,0,0,0,345,343,1,0,0,0,345,346,1,0,0,0,346,348,1,0,0,0,347,345,1,0,
	0,0,348,350,5,34,0,0,349,331,1,0,0,0,349,340,1,0,0,0,350,64,1,0,0,0,351,
	352,7,22,0,0,352,357,5,39,0,0,353,356,3,69,34,0,354,356,8,20,0,0,355,353,
	1,0,0,0,355,354,1,0,0,0,356,359,1,0,0,0,357,355,1,0,0,0,357,358,1,0,0,0,
	358,360,1,0,0,0,359,357,1,0,0,0,360,372,5,39,0,0,361,362,7,22,0,0,362,367,
	5,34,0,0,363,366,3,69,34,0,364,366,8,21,0,0,365,363,1,0,0,0,365,364,1,0,
	0,0,366,369,1,0,0,0,367,365,1,0,0,0,367,368,1,0,0,0,368,370,1,0,0,0,369,
	367,1,0,0,0,370,372,5,34,0,0,371,351,1,0,0,0,371,361,1,0,0,0,372,66,1,0,
	0,0,373,374,5,34,0,0,374,375,5,34,0,0,375,376,5,34,0,0,376,386,1,0,0,0,
	377,385,8,21,0,0,378,379,5,34,0,0,379,385,8,21,0,0,380,381,5,34,0,0,381,
	382,5,34,0,0,382,383,1,0,0,0,383,385,8,21,0,0,384,377,1,0,0,0,384,378,1,
	0,0,0,384,380,1,0,0,0,385,388,1,0,0,0,386,384,1,0,0,0,386,387,1,0,0,0,387,
	389,1,0,0,0,388,386,1,0,0,0,389,390,5,34,0,0,390,391,5,34,0,0,391,392,5,
	34,0,0,392,68,1,0,0,0,393,394,5,92,0,0,394,397,7,23,0,0,395,397,3,71,35,
	0,396,393,1,0,0,0,396,395,1,0,0,0,397,70,1,0,0,0,398,401,5,92,0,0,399,402,
	7,24,0,0,400,402,3,73,36,0,401,399,1,0,0,0,401,400,1,0,0,0,402,72,1,0,0,
	0,403,404,5,117,0,0,404,405,3,95,47,0,405,406,3,95,47,0,406,407,3,95,47,
	0,407,408,3,95,47,0,408,74,1,0,0,0,409,410,3,77,38,0,410,76,1,0,0,0,411,
	423,5,48,0,0,412,414,3,101,50,0,413,412,1,0,0,0,413,414,1,0,0,0,414,415,
	1,0,0,0,415,419,7,25,0,0,416,418,3,87,43,0,417,416,1,0,0,0,418,421,1,0,
	0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,423,1,0,0,0,421,419,1,0,0,0,422,
	411,1,0,0,0,422,413,1,0,0,0,423,78,1,0,0,0,424,425,5,48,0,0,425,427,7,26,
	0,0,426,428,3,89,44,0,427,426,1,0,0,0,428,429,1,0,0,0,429,427,1,0,0,0,429,
	430,1,0,0,0,430,438,1,0,0,0,431,433,5,37,0,0,432,434,3,89,44,0,433,432,
	1,0,0,0,434,435,1,0,0,0,435,433,1,0,0,0,435,436,1,0,0,0,436,438,1,0,0,0,
	437,424,1,0,0,0,437,431,1,0,0,0,438,80,1,0,0,0,439,440,5,48,0,0,440,442,
	7,8,0,0,441,443,3,91,45,0,442,441,1,0,0,0,443,444,1,0,0,0,444,442,1,0,0,
	0,444,445,1,0,0,0,445,82,1,0,0,0,446,447,5,48,0,0,447,449,7,27,0,0,448,
	450,3,93,46,0,449,448,1,0,0,0,450,451,1,0,0,0,451,449,1,0,0,0,451,452,1,
	0,0,0,452,84,1,0,0,0,453,454,5,48,0,0,454,456,7,28,0,0,455,457,3,95,47,
	0,456,455,1,0,0,0,457,458,1,0,0,0,458,456,1,0,0,0,458,459,1,0,0,0,459,467,
	1,0,0,0,460,462,5,35,0,0,461,463,3,95,47,0,462,461,1,0,0,0,463,464,1,0,
	0,0,464,462,1,0,0,0,464,465,1,0,0,0,465,467,1,0,0,0,466,453,1,0,0,0,466,
	460,1,0,0,0,467,86,1,0,0,0,468,469,7,29,0,0,469,88,1,0,0,0,470,471,2,48,
	49,0,471,90,1,0,0,0,472,473,7,30,0,0,473,92,1,0,0,0,474,477,3,87,43,0,475,
	477,7,31,0,0,476,474,1,0,0,0,476,475,1,0,0,0,477,94,1,0,0,0,478,481,3,87,
	43,0,479,481,7,32,0,0,480,478,1,0,0,0,480,479,1,0,0,0,481,96,1,0,0,0,482,
	484,5,46,0,0,483,485,3,87,43,0,484,483,1,0,0,0,485,486,1,0,0,0,486,484,
	1,0,0,0,486,487,1,0,0,0,487,98,1,0,0,0,488,490,7,1,0,0,489,491,3,101,50,
	0,490,489,1,0,0,0,490,491,1,0,0,0,491,493,1,0,0,0,492,494,3,87,43,0,493,
	492,1,0,0,0,494,495,1,0,0,0,495,493,1,0,0,0,495,496,1,0,0,0,496,100,1,0,
	0,0,497,498,7,33,0,0,498,102,1,0,0,0,499,501,3,107,53,0,500,499,1,0,0,0,
	501,504,1,0,0,0,502,500,1,0,0,0,502,503,1,0,0,0,503,508,1,0,0,0,504,502,
	1,0,0,0,505,507,3,3,1,0,506,505,1,0,0,0,507,510,1,0,0,0,508,506,1,0,0,0,
	508,509,1,0,0,0,509,511,1,0,0,0,510,508,1,0,0,0,511,515,3,105,52,0,512,
	514,3,3,1,0,513,512,1,0,0,0,514,517,1,0,0,0,515,513,1,0,0,0,515,516,1,0,
	0,0,516,104,1,0,0,0,517,515,1,0,0,0,518,520,5,13,0,0,519,521,5,10,0,0,520,
	519,1,0,0,0,520,521,1,0,0,0,521,524,1,0,0,0,522,524,5,10,0,0,523,518,1,
	0,0,0,523,522,1,0,0,0,524,106,1,0,0,0,525,527,7,0,0,0,526,525,1,0,0,0,527,
	528,1,0,0,0,528,526,1,0,0,0,528,529,1,0,0,0,529,530,1,0,0,0,530,531,6,53,
	0,0,531,108,1,0,0,0,532,533,5,47,0,0,533,534,5,42,0,0,534,538,1,0,0,0,535,
	537,9,0,0,0,536,535,1,0,0,0,537,540,1,0,0,0,538,539,1,0,0,0,538,536,1,0,
	0,0,539,541,1,0,0,0,540,538,1,0,0,0,541,542,5,42,0,0,542,543,5,47,0,0,543,
	544,1,0,0,0,544,545,6,54,0,0,545,110,1,0,0,0,546,547,5,47,0,0,547,548,5,
	47,0,0,548,552,1,0,0,0,549,551,8,16,0,0,550,549,1,0,0,0,551,554,1,0,0,0,
	552,550,1,0,0,0,552,553,1,0,0,0,553,555,1,0,0,0,554,552,1,0,0,0,555,556,
	6,55,0,0,556,112,1,0,0,0,69,0,119,125,130,137,142,147,152,157,162,164,173,
	215,226,242,253,257,263,271,273,276,279,285,288,291,297,299,305,308,314,
	319,325,329,336,345,349,355,357,365,367,371,384,386,396,401,413,419,422,
	429,435,437,444,451,458,464,466,476,480,486,490,495,502,508,515,520,523,
	528,538,552,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!YiniLexer.__ATN) {
			YiniLexer.__ATN = new ATNDeserializer().deserialize(YiniLexer._serializedATN);
		}

		return YiniLexer.__ATN;
	}


	static DecisionsToDFA = YiniLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}