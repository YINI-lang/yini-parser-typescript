{
    "name": "yini-parser",
    "version": "1.2.0-beta",
    "description": "Node.js parser for YINI — a clean, structured INI alternative with types, simple section nesting, comments, and strict mode.",
    "keywords": [
        "yini",
        "yini-parser",
        "config",
        "config-file",
        "configuration",
        "settings",
        "ini",
        "ini-parser",
        "json-alternative",
        "yaml-alternative",
        "parser",
        "parse",
        "read",
        "nodejs",
        "javascript"
    ],
    "homepage": "https://github.com/YINI-lang/yini-parser-typescript",
    "license": "Apache-2.0",
    "files": [
        "dist/",
        "!dist/**/*.test.*",
        "package.json",
        "README.md",
        "LICENSE",
        "CHANGELOG.md",
        "examples/"
    ],
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "exports": {
        ".": {
            "import": "./dist/index.js",
            "require": "./dist/index.js",
            "types": "./dist/index.d.ts"
        }
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/YINI-lang/yini-parser-typescript.git"
    },
    "private": false,
    "scripts": {
        "start": "npm run build && node dist/index.js",
        "start:debug": "npm run start -- isDebug=1",
        "start:main": "cross-env NODE_ENV=development APP_ENV=local ts-node src/dev/main.ts",
        "start:main:dev": "cross-env npm run start:main -- isDev=1",
        "start:main:dev:debug": "cross-env npm run start:main:dev -- isDebug=1",
        "start-w-clean": "npm run tsc && npm run clean:ts-js && npm run start:dev",
        "test": "cross-env NODE_ENV=test APP_ENV=local jest --bail --verbose --runInBand",
        "test:debug": "cross-env npm run test -- --isDebug=1",
        "test:smoke": "cross-env NODE_ENV=test APP_ENV=local jest tests/smoke --bail --verbose --runInBand",
        "test:unit": "cross-env NODE_ENV=test APP_ENV=local jest src/ --bail --verbose --runInBand",
        "test:integr": "cross-env NODE_ENV=test APP_ENV=local jest tests/integration --bail --verbose --runInBand",
        "test:issues": "cross-env NODE_ENV=test APP_ENV=local jest tests/fixed-issues --bail --verbose --runInBand",
        "test:gold": "cross-env NODE_ENV=test APP_ENV=local jest tests/golden --bail --verbose --runInBand",
        "test:smoke:debug": "cross-env npm run test:smoke -- --isDebug=1",
        "test:unit:debug": "cross-env npm run test:unit -- --isDebug=1",
        "test:integr:debug": "cross-env npm run test:integr -- --isDebug=1",
        "test:issues:debug": "cross-env npm run test:issues -- --isDebug=1",
        "test:gold:debug": "cross-env npm run test:gold -- --isDebug=1",
        "test:esm": "node ./tests/fixtures/test-src-files/esm-smoke.js",
        "ci:test": "cross-env NODE_ENV=test APP_ENV=ci jest --verbose --runInBand",
        "ci:test:smoke": "cross-env NODE_ENV=test APP_ENV=ci jest tests/smoke --verbose --runInBand",
        "tsc": "npx tsc -p ./tsconfig.json",
        "lint": "eslint src --ext .ts",
        "clean:ts-js": "bash scripts/clean-ts-js.sh",
        "antlr": "make generate",
        "build": "tsc -p ./tsconfig.json",
        "prepublishOnly": "npm run lint && npm test && npm run build"
    },
    "author": "Marko K. Seppänen",
    "dependencies": {
        "antlr4": "^4.13.2"
    },
    "devDependencies": {
        "@eslint/js": "^9.31.0",
        "@ianvs/prettier-plugin-sort-imports": "^4.4.2",
        "@types/jest": "^29.5.14",
        "@types/node": "^22.15.3",
        "@typescript-eslint/eslint-plugin": "^8.37.0",
        "@typescript-eslint/parser": "^8.37.0",
        "cross-env": "^7.0.3",
        "eslint": "^9.31.0",
        "eslint-config-prettier": "^10.1.5",
        "eslint-plugin-prettier": "^5.4.0",
        "husky": "^9.1.7",
        "jest": "^29.7.0",
        "lint-staged": "^16.0.0",
        "prettier": "^3.5.3",
        "ts-jest": "^29.3.4",
        "ts-node": "^10.9.2",
        "typescript": "^5.7.3"
    },
    "lint-staged": {
        "src/**/*.{js,jsx,json,ts,tsx,css,scss}": [
            "prettier --config ./.prettierrc --write"
        ]
    },
    "engines": {
        "node": ">=20"
    },
    "sideEffects": false,
    "type": "commonjs"
}
